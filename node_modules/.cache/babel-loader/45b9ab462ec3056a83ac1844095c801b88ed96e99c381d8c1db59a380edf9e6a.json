{"ast":null,"code":"var _jsxFileName = \"/workspaces/cardology/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport birthdayCardMapping from './birthdayCardMapping.json';\nimport cardData from './cardData.json';\nimport Modal from 'react-modal';\nimport { ChakraProvider, Box, Heading, Select, Input, Flex, VStack } from '@chakra-ui/react';\nimport WeeklyReadingPanel from './components/WeeklyReadingPanel';\n\n// Static Data Mapping\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst staticDataMapping = {\n  1: {\n    value1: 'J♠',\n    value2: '10♣'\n  },\n  2: {\n    value1: 'Q♠',\n    value2: '8♦'\n  },\n  3: {\n    value1: 'K♠',\n    value2: 'K♠'\n  },\n  4: {\n    value1: 'A♥',\n    value2: '3♥'\n  },\n  5: {\n    value1: '2♥',\n    value2: 'A♣'\n  },\n  6: {\n    value1: '3♥',\n    value2: 'Q♣'\n  },\n  7: {\n    value1: '4♥',\n    value2: '10♠'\n  },\n  8: {\n    value1: '5♥',\n    value2: '4♣'\n  },\n  9: {\n    value1: '6♥',\n    value2: '3♦'\n  },\n  10: {\n    value1: '7♥',\n    value2: 'A♠'\n  },\n  11: {\n    value1: '8♥',\n    value2: '7♥'\n  },\n  12: {\n    value1: '9♥',\n    value2: '7♦'\n  },\n  13: {\n    value1: '10♥',\n    value2: '5♠'\n  },\n  14: {\n    value1: 'J♥',\n    value2: 'J♥'\n  },\n  15: {\n    value1: 'Q♥',\n    value2: '9♣'\n  },\n  16: {\n    value1: 'K♥',\n    value2: '9♠'\n  },\n  17: {\n    value1: 'A♣',\n    value2: '2♥'\n  },\n  18: {\n    value1: '2♣',\n    value2: 'K♥'\n  },\n  19: {\n    value1: '3♣',\n    value2: 'K♦'\n  },\n  20: {\n    value1: '4♣',\n    value2: '6♥'\n  },\n  21: {\n    value1: '5♣',\n    value2: '4♣'\n  },\n  22: {\n    value1: '6♣',\n    value2: '2♦'\n  },\n  23: {\n    value1: '7♣',\n    value2: 'J♠'\n  },\n  24: {\n    value1: '8♣',\n    value2: '8♣'\n  },\n  25: {\n    value1: '9♣',\n    value2: '6♦'\n  },\n  26: {\n    value1: '10♣',\n    value2: '4♠'\n  },\n  27: {\n    value1: 'J♣',\n    value2: '10♥'\n  },\n  28: {\n    value1: 'Q♣',\n    value2: '10♦'\n  },\n  29: {\n    value1: 'K♣',\n    value2: '8♠'\n  },\n  30: {\n    value1: 'A♦',\n    value2: 'A♥'\n  },\n  31: {\n    value1: '2♦',\n    value2: 'A♦'\n  },\n  32: {\n    value1: '3♦',\n    value2: 'Q♦'\n  },\n  33: {\n    value1: '4♦',\n    value2: '5♥'\n  },\n  34: {\n    value1: '5♦',\n    value2: '3♣'\n  },\n  35: {\n    value1: '6♦',\n    value2: '3♠'\n  },\n  36: {\n    value1: '7♦',\n    value2: '9♥'\n  },\n  37: {\n    value1: '8♦',\n    value2: '7♣'\n  },\n  38: {\n    value1: '9♦',\n    value2: '5♦'\n  },\n  39: {\n    value1: '10♦',\n    value2: 'Q♠'\n  },\n  40: {\n    value1: 'J♦',\n    value2: 'J♣'\n  },\n  41: {\n    value1: 'Q♦',\n    value2: '9♦'\n  },\n  42: {\n    value1: 'K♦',\n    value2: '7♠'\n  },\n  43: {\n    value1: 'A♠',\n    value2: '2♣'\n  },\n  44: {\n    value1: '2♠',\n    value2: 'K♣'\n  },\n  45: {\n    value1: '3♠',\n    value2: 'J♦'\n  },\n  46: {\n    value1: '4♠',\n    value2: '4♥'\n  },\n  47: {\n    value1: '5♠',\n    value2: '4♦'\n  },\n  48: {\n    value1: '6♠',\n    value2: '2♠'\n  },\n  49: {\n    value1: '7♠',\n    value2: '8♥'\n  },\n  50: {\n    value1: '8♠',\n    value2: '6♣'\n  },\n  51: {\n    value1: '9♠',\n    value2: '6♠'\n  },\n  52: {\n    value1: '10♠',\n    value2: 'Q♥'\n  }\n};\n\n// Initial setup for Age 0 spread\nconst initialSpread = [[{\n  value: '',\n  staticData: ['', '', '']\n}, {\n  value: '',\n  staticData: ['', '', '']\n}, {\n  value: 'K♠',\n  staticData: ['K♠', 'K♠', 3]\n}, {\n  value: '8♦',\n  staticData: ['Q♠', '8♦', 2]\n}, {\n  value: '10♣',\n  staticData: ['J♠', '10♣', 1]\n}, {\n  value: '',\n  staticData: ['', '', '']\n}, {\n  value: '',\n  staticData: ['', '', '']\n}, {\n  value: '☉',\n  staticData: ['', '', '']\n}], [{\n  value: 'A♠',\n  staticData: ['7♥', 'A♠', 10]\n}, {\n  value: '3♦',\n  staticData: ['6♥', '3♦', 9]\n}, {\n  value: '5♣',\n  staticData: ['5♥', '5♣', 8]\n}, {\n  value: '10♠',\n  staticData: ['4♥', '10♠', 7]\n}, {\n  value: 'Q♣',\n  staticData: ['3♥', 'Q♣', 6]\n}, {\n  value: 'A♣',\n  staticData: ['2♥', 'A♣', 5]\n}, {\n  value: '3♥',\n  staticData: ['A♥', '3♥', 4]\n}, {\n  value: '☿',\n  staticData: ['', '', '']\n}], [{\n  value: '2♥',\n  staticData: ['A♣', '2♥', 17]\n}, {\n  value: '9♠',\n  staticData: ['K♥', '9♠', 16]\n}, {\n  value: '9♣',\n  staticData: ['Q♥', '9♣', 15]\n}, {\n  value: 'J♥',\n  staticData: ['J♥', 'J♥', 14]\n}, {\n  value: '5♠',\n  staticData: ['10♥', '5♠', 13]\n}, {\n  value: '7♦',\n  staticData: ['9♥', '7♦', 12]\n}, {\n  value: '7♥',\n  staticData: ['8♥', '7♥', 11]\n}, {\n  value: '♀',\n  staticData: ['', '', '']\n}], [{\n  value: '8♣',\n  staticData: ['8♣', '8♣', 24]\n}, {\n  value: 'J♠',\n  staticData: ['7♣', 'J♠', 23]\n}, {\n  value: '2♦',\n  staticData: ['6♣', '2♦', 22]\n}, {\n  value: '4♣',\n  staticData: ['5♣', '4♣', 21]\n}, {\n  value: '6♥',\n  staticData: ['4♣', '6♥', 20]\n}, {\n  value: 'K♦',\n  staticData: ['3♣', 'K♦', 19]\n}, {\n  value: 'K♥',\n  staticData: ['2♣', 'K♥', 18]\n}, {\n  value: '♂',\n  staticData: ['', '', '']\n}], [{\n  value: 'A♦',\n  staticData: ['2♦', 'A♦', 31]\n}, {\n  value: 'A♥',\n  staticData: ['A♦', 'A♥', 30]\n}, {\n  value: '8♠',\n  staticData: ['K♣', '8♠', 29]\n}, {\n  value: '10♦',\n  staticData: ['Q♣', '10♦', 28]\n}, {\n  value: '10♥',\n  staticData: ['J♣', '10♥', 27]\n}, {\n  value: '4♠',\n  staticData: ['10♣', '4♠', 26]\n}, {\n  value: '6♦',\n  staticData: ['9♣', '6♦', 25]\n}, {\n  value: '♃',\n  staticData: ['', '', '']\n}], [{\n  value: '5♦',\n  staticData: ['9♦', '5♦', 38]\n}, {\n  value: '7♣',\n  staticData: ['8♦', '7♣', 37]\n}, {\n  value: '9♥',\n  staticData: ['7♦', '9♥', 36]\n}, {\n  value: '3♠',\n  staticData: ['6♦', '3♠', 35]\n}, {\n  value: '3♣',\n  staticData: ['5♦', '3♣', 34]\n}, {\n  value: '5♥',\n  staticData: ['4♦', '5♥', 33]\n}, {\n  value: 'Q♦',\n  staticData: ['3♦', 'Q♦', 32]\n}, {\n  value: '♄',\n  staticData: ['', '', '']\n}], [{\n  value: 'J♦',\n  staticData: ['3♠', 'J♦', 45]\n}, {\n  value: 'K♣',\n  staticData: ['2♠', 'K♣', 44]\n}, {\n  value: '2♣',\n  staticData: ['A♠', '2♣', 43]\n}, {\n  value: '7♠',\n  staticData: ['K♦', '7♠', 42]\n}, {\n  value: '9♦',\n  staticData: ['Q♦', '9♦', 41]\n}, {\n  value: 'J♣',\n  staticData: ['J♦', 'J♣', 40]\n}, {\n  value: 'Q♠',\n  staticData: ['10♦', 'Q♠', 39]\n}, {\n  value: '♅',\n  staticData: ['', '', '']\n}], [{\n  value: 'Q♥',\n  staticData: ['10♠', 'Q♥', 52]\n}, {\n  value: '6♠',\n  staticData: ['9♠', '6♠', 51]\n}, {\n  value: '6♣',\n  staticData: ['8♠', '6♣', 50]\n}, {\n  value: '8♥',\n  staticData: ['7♠', '8♥', 49]\n}, {\n  value: '2♠',\n  staticData: ['6♠', '2♠', 48]\n}, {\n  value: '4♦',\n  staticData: ['5♠', '4♦', 47]\n}, {\n  value: '4♥',\n  staticData: ['4♠', '4♥', 46]\n}, {\n  value: '♆',\n  staticData: ['', '', '']\n}]];\nconst lineOfSuccession = ['Q♠', '8♦', '7♣', 'J♠', '10♣', '4♠', '4♥', '10♠', 'Q♥', '9♣', '6♦', '3♠', 'J♦', 'J♣', '10♥', '5♠', '4♦', '5♥', '5♣', '4♣', '6♥', '3♦', 'Q♦', '9♦', '5♦', '3♣', 'K♦', '7♠', '8♥', '7♥', 'A♠', '2♣', 'K♥', '9♠', '6♠', '2♠', 'K♣', '8♠', '6♣', '2♦', 'A♦', 'A♥', '3♥', 'Q♣', '10♦'];\nconst fixedCards = ['K♠', '8♣', 'J♥'];\nconst semiFixedPairs = [{\n  value1: 'A♣',\n  value2: '2♥'\n}, {\n  value1: '7♦',\n  value2: '9♥'\n}];\n\n// Function to get the next card in the line of succession\nconst getNextCardInSuccession = card => {\n  const index = lineOfSuccession.indexOf(card);\n  if (index !== -1 && index < lineOfSuccession.length - 1) {\n    return lineOfSuccession[index + 1];\n  } else if (index === lineOfSuccession.length - 1) {\n    return lineOfSuccession[0];\n  }\n  return card;\n};\n\n// Function to generate the next spread based on the current spread\nconst generateNextSpread = currentSpread => {\n  const nextSpread = JSON.parse(JSON.stringify(currentSpread));\n\n  // Handle semi-fixed cards\n  semiFixedPairs.forEach(pair => {\n    nextSpread.forEach(row => {\n      row.forEach(card => {\n        if (card.value === pair.value1) {\n          card.value = pair.value2;\n        } else if (card.value === pair.value2) {\n          card.value = pair.value1;\n        }\n      });\n    });\n  });\n\n  // Handle regular cards\n  nextSpread.forEach(row => {\n    row.forEach(card => {\n      if (!fixedCards.includes(card.value) && !semiFixedPairs.some(pair => pair.value1 === card.value || pair.value2 === card.value)) {\n        card.value = getNextCardInSuccession(card.value);\n      }\n    });\n  });\n  return nextSpread;\n};\n\n// Function to generate all spreads\nconst generateAllSpreads = () => {\n  const spreads = [initialSpread];\n  for (let i = 1; i < 90; i++) {\n    spreads.push(generateNextSpread(spreads[i - 1]));\n  }\n  return spreads;\n};\n\n// Function to get the card for a given birthday\nconst getCardForBirthday = birthday => {\n  const [year, month, day] = birthday.split('-');\n  const birthDateString = `${parseInt(day)}-${new Date(year, month - 1).toLocaleString('default', {\n    month: 'short'\n  })}`;\n  console.log('Formatted Birthday:', birthDateString); // Debugging log\n  const entry = birthdayCardMapping.find(entry => entry.birthday === birthDateString);\n  return entry ? entry.card : null;\n};\nconst calculateAge = birthdate => {\n  const today = new Date();\n  const birthDate = new Date(birthdate);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDifference = today.getMonth() - birthDate.getMonth();\n  if (monthDifference < 0 || monthDifference === 0 && today.getDate() < birthDate.getDate()) {\n    age--;\n  }\n  return age;\n};\nconst findCardPositionInSpread = (card, spread) => {\n  for (let rowIndex = 0; rowIndex < spread.length; rowIndex++) {\n    for (let colIndex = 0; colIndex < spread[rowIndex].length; colIndex++) {\n      if (spread[rowIndex][colIndex].value === card) {\n        return {\n          rowIndex,\n          colIndex\n        };\n      }\n    }\n  }\n  return null;\n};\nconst findCardPosition = (card, spread) => {\n  for (let row of spread) {\n    for (let cell of row) {\n      if (cell.value === card) {\n        return parseInt(cell.staticData[2]);\n      }\n    }\n  }\n  return null;\n};\nconst isPlanetSymbol = symbol => {\n  return /[☉☿♀♂♃♄♅♆]/.test(symbol);\n};\nconst getCardColor = card => {\n  if (card.includes('♥') || card.includes('♦')) {\n    return 'red';\n  } else if (card.includes('♠') || card.includes('♣')) {\n    return 'black';\n  }\n  return 'black';\n};\nconst getNext12Positions = startPosition => {\n  const positions = [];\n  for (let i = 0; i < 12; i++) {\n    positions.push((startPosition + i) % 52 + 1);\n  }\n  return positions;\n};\n\n// Function to calculate planetary days based on birth day of the week\nfunction calculatePlanetaryDays(birthDate) {\n  const planets = ['Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'];\n\n  // Current date\n  const today = new Date();\n\n  // Get the day of the week on which the person was born (0 = Sunday, 6 = Saturday)\n  const birthDayOfWeek = birthDate.getDay();\n\n  // Get today’s day of the week\n  const todayDayOfWeek = today.getDay();\n\n  // Adjust Mercury day: Find the most recent Mercury day that aligns with the weekly spread's starting day\n  let mercuryDay = new Date(today);\n\n  // Adjust the starting day for Mercury (the birth day of the week)\n  mercuryDay.setDate(today.getDate() - (todayDayOfWeek - birthDayOfWeek + 7) % 7 + 1); // Added +1 to push the day forward\n\n  const planetaryDays = [];\n\n  // Loop through planets and assign days based on the Mercury day\n  planets.forEach((planet, index) => {\n    let planetDay = new Date(mercuryDay);\n    planetDay.setDate(mercuryDay.getDate() + index); // Set the next planetary day\n    planetaryDays.push({\n      planet: planet,\n      date: planetDay.toLocaleDateString('en-US', {\n        month: 'numeric',\n        day: 'numeric',\n        year: 'numeric'\n      })\n    });\n  });\n  return planetaryDays;\n}\nconst App = () => {\n  _s();\n  const [selectedPlate, setSelectedPlate] = useState(0);\n  const [birthdate, setBirthdate] = useState('');\n  const [highlightedCards, setHighlightedCards] = useState([]);\n  const [highlightedPositions, setHighlightedPositions] = useState([]);\n  const [clickedCards, setClickedCards] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalCardData, setModalCardData] = useState(null);\n  const [weeklyPlanetCards, setWeeklyPlanetCards] = useState([]);\n  const [weeklyPlanetDates, setWeeklyPlanetDates] = useState([]);\n  const spreads = generateAllSpreads();\n  const [planetaryDays, setPlanetaryDays] = useState([]);\n  const [isReadingPanelOpen, setIsReadingPanelOpen] = useState(false);\n  const handlePlateChange = e => {\n    const newPlate = Number(e.target.value);\n    setSelectedPlate(newPlate);\n    if (highlightedCards.length > 0) {\n      const position = findCardPosition(highlightedCards[0], spreads[newPlate]);\n      if (position) {\n        setHighlightedPositions([position, ...getNext12Positions(position)]);\n      }\n    }\n  };\n  const handleBirthdateChange = e => {\n    e.preventDefault();\n    const inputBirthdate = e.target.value;\n    setBirthdate(inputBirthdate);\n    const card = getCardForBirthday(inputBirthdate);\n    if (card) {\n      setHighlightedCards([card]);\n      const age = calculateAge(inputBirthdate);\n      const plate = age % 90;\n      setSelectedPlate(plate);\n      const position = findCardPosition(card, spreads[plate]);\n      if (position) {\n        setHighlightedPositions([position, ...getNext12Positions(position)]);\n      }\n    } else {\n      setHighlightedCards([]);\n      setHighlightedPositions([]);\n    }\n  };\n  const resetToYearlySpread = () => {\n    if (birthdate) {\n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const age = calculateAge(birthdate);\n        const plate = age % 90;\n        setSelectedPlate(plate);\n        const position = findCardPosition(card, spreads[plate]);\n        if (position) {\n          setHighlightedPositions([position, ...getNext12Positions(position)]);\n        }\n        // Reset weekly planet cards\n        setWeeklyPlanetCards([]);\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n        setWeeklyPlanetCards([]);\n      }\n    }\n  };\n  const handleCardClick = card => {\n    setClickedCards(prevClickedCards => {\n      if (prevClickedCards.includes(card)) {\n        const {\n          rowIndex,\n          colIndex\n        } = findCardPositionInSpread(card, spreads[selectedPlate]);\n        const staticDataPosition = spreads[selectedPlate][rowIndex][colIndex].staticData[2];\n        const staticData = staticDataMapping[staticDataPosition];\n        setModalCardData({\n          value: card,\n          staticData: staticData || {\n            value1: '',\n            value2: ''\n          },\n          ...cardData[card],\n          displacingCard: cardData[staticData.value2],\n          staticCard1: cardData[staticData.value1]\n        });\n        setModalIsOpen(true);\n        return prevClickedCards.filter(clickedCard => clickedCard !== card);\n      } else {\n        return [...prevClickedCards, card];\n      }\n    });\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setModalCardData(null);\n  };\n  const handleWeeklyPlateClick = () => {\n    if (birthdate) {\n      const weeklyPlateNumber = calculateWeeklyNumber(birthdate);\n      setSelectedPlate(weeklyPlateNumber);\n      setClickedCards([]);\n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const position = findCardPosition(card, spreads[weeklyPlateNumber]);\n        if (position) {\n          const next12Positions = getNext12Positions(position);\n          setHighlightedPositions([position, ...next12Positions]);\n          const planetCards = next12Positions.slice(0, 7).map(pos => {\n            const foundCard = spreads[weeklyPlateNumber].flat().find(cell => parseInt(cell.staticData[2]) === pos);\n            return foundCard ? foundCard.value : '';\n          });\n          setWeeklyPlanetCards(planetCards);\n          const birthDateObj = new Date(birthdate);\n          const calculatedPlanetaryDays = calculatePlanetaryDays(birthDateObj);\n          setPlanetaryDays(calculatedPlanetaryDays);\n        }\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n        setWeeklyPlanetCards([]);\n        setWeeklyPlanetDates([]);\n      }\n    }\n  };\n  const calculateWeeklyNumber = birthdate => {\n    const birth = new Date(birthdate);\n    const now = new Date();\n    const diff = now - birth;\n    const days = diff / 1000 / 60 / 60 / 24;\n    const weeks = days / 7;\n    const A = weeks / 90;\n    const B = A - Math.floor(A);\n    const currentWeeklyNumber = parseInt(B * 90);\n    return currentWeeklyNumber;\n  };\n  const handleSevenWeeklyPlateClick = () => {\n    if (birthdate) {\n      const weeklySevenPlateNumber = calculateSevenWeeklyNumber(birthdate);\n      setSelectedPlate(weeklySevenPlateNumber);\n      setClickedCards([]);\n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const position = findCardPosition(card, spreads[weeklySevenPlateNumber]);\n        if (position) {\n          const next12Positions = getNext12Positions(position);\n          setHighlightedPositions([position, ...getNext12Positions(position)]);\n\n          // Get the cards for the 1st through 7th positions (7 Week Spread)\n          const planetCards = next12Positions.slice(0, 7).map(pos => {\n            const foundCard = spreads[weeklySevenPlateNumber].flat().find(cell => parseInt(cell.staticData[2]) === pos);\n            return foundCard ? foundCard.value : '';\n          });\n          setWeeklyPlanetCards(planetCards);\n\n          // Since you're not showing the planetary days anymore, we don't need to set dates.\n          // If you wish to add planetary dates, you can do so here using the same logic as before.\n        }\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n        setWeeklyPlanetCards([]);\n      }\n    }\n  };\n  const calculateSevenWeeklyNumber = birthdate => {\n    const birth = new Date(birthdate);\n    const now = new Date();\n    const diff = now - birth;\n    const days = diff / 1000 / 60 / 60 / 24;\n    const cycle = days / 49;\n    const A = cycle / 90;\n    const B = A - Math.floor(A);\n    const currentSevenWeeklyNumber = parseInt(B * 90);\n    return currentSevenWeeklyNumber;\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"App\",\n      p: 5,\n      children: [/*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 4,\n        align: \"stretch\",\n        mb: 6,\n        maxWidth: \"550px\",\n        margin: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"xl\",\n          textAlign: \"center\",\n          children: \"Planetary Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          direction: {\n            base: \"column\",\n            md: \"row\"\n          },\n          justify: \"space-between\",\n          align: \"center\",\n          wrap: \"wrap\",\n          gap: 4,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            flex: \"1\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: handlePlateChange,\n              value: selectedPlate,\n              children: spreads.map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: index,\n                children: [\"Plate \", index]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            flex: \"1\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"date\",\n              value: birthdate,\n              onChange: handleBirthdateChange,\n              placeholder: \"Enter Birthdate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            flex: \"1\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                const selectedAction = e.target.value;\n                if (selectedAction === \"weekly\") {\n                  handleWeeklyPlateClick();\n                } else if (selectedAction === \"sevenWeekly\") {\n                  handleSevenWeeklyPlateClick();\n                } else if (selectedAction === \"resetYearly\") {\n                  resetToYearlySpread();\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select an Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"weekly\",\n                children: \"Show Weekly Plate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sevenWeekly\",\n                children: \"Show 7 Weekly Plate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"resetYearly\",\n                children: \"Reset to Yearly Spread\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [spreads[selectedPlate].map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleCardClick(cell.value),\n              style: {\n                border: highlightedCards.includes(cell.value) || highlightedPositions.includes(parseInt(cell.staticData[2])) ? '3px solid black' : '1px solid black',\n                textAlign: 'center',\n                color: isPlanetSymbol(cell.value) ? 'red' : getCardColor(cell.value),\n                backgroundColor: highlightedCards.includes(cell.value) ? 'yellow' : highlightedPositions.includes(parseInt(cell.staticData[2])) ? '#f2f2f2' : clickedCards.includes(cell.value) ? 'yellow' : 'white',\n                position: 'relative'\n              },\n              children: cell.value !== 'x' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [cell.value, !isPlanetSymbol(cell.value) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"static-data\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: getCardColor(cell.staticData[0])\n                    },\n                    children: cell.staticData[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: getCardColor(cell.staticData[1])\n                    },\n                    children: cell.staticData[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true) : cell.value\n            }, cellIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 19\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: ['♆', '♅', '♄', '♃', '♂', '♀', '☿', ''].map((planet, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid black',\n                textAlign: 'center',\n                color: 'red',\n                // All planets are in red\n                position: 'relative'\n              },\n              children: planet\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), weeklyPlanetCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekly-planet-cards\",\n        style: {\n          marginTop: '20px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedPlate === calculateSevenWeeklyNumber(birthdate) ? '7 Week Spread' : 'Weekly Planet Cards'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            flexWrap: 'wrap',\n            gap: '5px'\n          },\n          children: weeklyPlanetCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              width: '60px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                border: '1px solid black',\n                padding: '5px',\n                marginBottom: '2px',\n                backgroundColor: highlightedCards.includes(card) ? 'yellow' : 'white',\n                color: getCardColor(card)\n              },\n              children: card\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '0.8em'\n              },\n              children: ['Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'][index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onRequestClose: closeModal,\n        style: {\n          content: {\n            maxWidth: '600px',\n            height: '600px',\n            margin: '0 auto'\n          }\n        },\n        children: modalCardData && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: modalCardData.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Keywords:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 18\n            }, this), \" \", modalCardData.keywords]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Dates:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 18\n            }, this), \" \", modalCardData.dates]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this), modalCardData.staticData && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Displacing: \", modalCardData.displacingCard.staticData[1]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 19\n            }, this), modalCardData.displacingCard && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Displacing Card Position:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 26\n                }, this), \" \", modalCardData.displacingCard.position]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Displacing Keywords:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 26\n                }, this), \" \", modalCardData.displacingCard.keywords]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Displacing Dates:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 26\n                }, this), \" \", modalCardData.displacingCard.dates]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Next Displacement Card: \", modalCardData.displacingCard.staticData[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 19\n            }, this), modalCardData.staticCard1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Static Keywords:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 26\n                }, this), \" \", modalCardData.staticCard1.keywords]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Static Dates:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 26\n                }, this), \" \", modalCardData.staticCard1.dates]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JYLylLfESHZitMD1jrwoccuwDgo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","birthdayCardMapping","cardData","Modal","ChakraProvider","Box","Heading","Select","Input","Flex","VStack","WeeklyReadingPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","staticDataMapping","value1","value2","initialSpread","value","staticData","lineOfSuccession","fixedCards","semiFixedPairs","getNextCardInSuccession","card","index","indexOf","length","generateNextSpread","currentSpread","nextSpread","JSON","parse","stringify","forEach","pair","row","includes","some","generateAllSpreads","spreads","i","push","getCardForBirthday","birthday","year","month","day","split","birthDateString","parseInt","Date","toLocaleString","console","log","entry","find","calculateAge","birthdate","today","birthDate","age","getFullYear","monthDifference","getMonth","getDate","findCardPositionInSpread","spread","rowIndex","colIndex","findCardPosition","cell","isPlanetSymbol","symbol","test","getCardColor","getNext12Positions","startPosition","positions","calculatePlanetaryDays","planets","birthDayOfWeek","getDay","todayDayOfWeek","mercuryDay","setDate","planetaryDays","planet","planetDay","date","toLocaleDateString","App","_s","selectedPlate","setSelectedPlate","setBirthdate","highlightedCards","setHighlightedCards","highlightedPositions","setHighlightedPositions","clickedCards","setClickedCards","modalIsOpen","setModalIsOpen","modalCardData","setModalCardData","weeklyPlanetCards","setWeeklyPlanetCards","weeklyPlanetDates","setWeeklyPlanetDates","setPlanetaryDays","isReadingPanelOpen","setIsReadingPanelOpen","handlePlateChange","e","newPlate","Number","target","position","handleBirthdateChange","preventDefault","inputBirthdate","plate","resetToYearlySpread","handleCardClick","prevClickedCards","staticDataPosition","displacingCard","staticCard1","filter","clickedCard","closeModal","handleWeeklyPlateClick","weeklyPlateNumber","calculateWeeklyNumber","next12Positions","planetCards","slice","map","pos","foundCard","flat","birthDateObj","calculatedPlanetaryDays","birth","now","diff","days","weeks","A","B","Math","floor","currentWeeklyNumber","handleSevenWeeklyPlateClick","weeklySevenPlateNumber","calculateSevenWeeklyNumber","cycle","currentSevenWeeklyNumber","children","className","p","spacing","align","mb","maxWidth","margin","as","size","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","direction","base","md","justify","wrap","gap","flex","onChange","_","type","placeholder","selectedAction","border","cellIndex","onClick","style","color","backgroundColor","marginTop","display","justifyContent","flexWrap","width","padding","marginBottom","fontSize","isOpen","onRequestClose","content","height","keywords","dates","_c","$RefreshReg$"],"sources":["/workspaces/cardology/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport birthdayCardMapping from './birthdayCardMapping.json';\nimport cardData from './cardData.json';\nimport Modal from 'react-modal';\nimport { ChakraProvider, Box, Heading, Select, Input, Flex, VStack } from '@chakra-ui/react';\nimport WeeklyReadingPanel from './components/WeeklyReadingPanel';\n\n\n// Static Data Mapping\nconst staticDataMapping = {\n  1: { value1: 'J♠', value2: '10♣' },\n  2: { value1: 'Q♠', value2: '8♦' },\n  3: { value1: 'K♠', value2: 'K♠' },\n  4: { value1: 'A♥', value2: '3♥' },\n  5: { value1: '2♥', value2: 'A♣' },\n  6: { value1: '3♥', value2: 'Q♣' },\n  7: { value1: '4♥', value2: '10♠' },\n  8: { value1: '5♥', value2: '4♣' },\n  9: { value1: '6♥', value2: '3♦' },\n  10: { value1: '7♥', value2: 'A♠' },\n  11: { value1: '8♥', value2: '7♥' },\n  12: { value1: '9♥', value2: '7♦' },\n  13: { value1: '10♥', value2: '5♠' },\n  14: { value1: 'J♥', value2: 'J♥' },\n  15: { value1: 'Q♥', value2: '9♣' },\n  16: { value1: 'K♥', value2: '9♠' },\n  17: { value1: 'A♣', value2: '2♥' },\n  18: { value1: '2♣', value2: 'K♥' },\n  19: { value1: '3♣', value2: 'K♦' },\n  20: { value1: '4♣', value2: '6♥' },\n  21: { value1: '5♣', value2: '4♣' },\n  22: { value1: '6♣', value2: '2♦' },\n  23: { value1: '7♣', value2: 'J♠' },\n  24: { value1: '8♣', value2: '8♣' },\n  25: { value1: '9♣', value2: '6♦' },\n  26: { value1: '10♣', value2: '4♠' },\n  27: { value1: 'J♣', value2: '10♥' },\n  28: { value1: 'Q♣', value2: '10♦' },\n  29: { value1: 'K♣', value2: '8♠' },\n  30: { value1: 'A♦', value2: 'A♥' },\n  31: { value1: '2♦', value2: 'A♦' },\n  32: { value1: '3♦', value2: 'Q♦' },\n  33: { value1: '4♦', value2: '5♥' },\n  34: { value1: '5♦', value2: '3♣' },\n  35: { value1: '6♦', value2: '3♠' },\n  36: { value1: '7♦', value2: '9♥' },\n  37: { value1: '8♦', value2: '7♣' },\n  38: { value1: '9♦', value2: '5♦' },\n  39: { value1: '10♦', value2: 'Q♠' },\n  40: { value1: 'J♦', value2: 'J♣' },\n  41: { value1: 'Q♦', value2: '9♦' },\n  42: { value1: 'K♦', value2: '7♠' },\n  43: { value1: 'A♠', value2: '2♣' },\n  44: { value1: '2♠', value2: 'K♣' },\n  45: { value1: '3♠', value2: 'J♦' },\n  46: { value1: '4♠', value2: '4♥' },\n  47: { value1: '5♠', value2: '4♦' },\n  48: { value1: '6♠', value2: '2♠' },\n  49: { value1: '7♠', value2: '8♥' },\n  50: { value1: '8♠', value2: '6♣' },\n  51: { value1: '9♠', value2: '6♠' },\n  52: { value1: '10♠', value2: 'Q♥' },\n};\n\n\n// Initial setup for Age 0 spread\nconst initialSpread = [\n  [{ value: '', staticData: ['', '', ''] }, { value: '', staticData: ['', '', ''] }, { value: 'K♠', staticData: ['K♠', 'K♠', 3] }, { value: '8♦', staticData: ['Q♠', '8♦', 2] }, { value: '10♣', staticData: ['J♠', '10♣', 1] }, { value: '', staticData: ['', '', ''] }, { value: '', staticData: ['', '', ''] }, { value: '☉', staticData: ['', '', ''] }],\n  [{ value: 'A♠', staticData: ['7♥', 'A♠', 10] }, { value: '3♦', staticData: ['6♥', '3♦', 9] }, { value: '5♣', staticData: ['5♥', '5♣', 8] }, { value: '10♠', staticData: ['4♥', '10♠', 7] }, { value: 'Q♣', staticData: ['3♥', 'Q♣', 6] }, { value: 'A♣', staticData: ['2♥', 'A♣', 5] }, { value: '3♥', staticData: ['A♥', '3♥', 4] }, { value: '☿', staticData: ['', '', ''] }],\n  [{ value: '2♥', staticData: ['A♣', '2♥', 17] }, { value: '9♠', staticData: ['K♥', '9♠', 16] }, { value: '9♣', staticData: ['Q♥', '9♣', 15] }, { value: 'J♥', staticData: ['J♥', 'J♥', 14] }, { value: '5♠', staticData: ['10♥', '5♠', 13] }, { value: '7♦', staticData: ['9♥', '7♦', 12] }, { value: '7♥', staticData: ['8♥', '7♥', 11] }, { value: '♀', staticData: ['', '', ''] }],\n  [{ value: '8♣', staticData: ['8♣', '8♣', 24] }, { value: 'J♠', staticData: ['7♣', 'J♠', 23] }, { value: '2♦', staticData: ['6♣', '2♦', 22] }, { value: '4♣', staticData: ['5♣', '4♣', 21] }, { value: '6♥', staticData: ['4♣', '6♥', 20] }, { value: 'K♦', staticData: ['3♣', 'K♦', 19] }, { value: 'K♥', staticData: ['2♣', 'K♥', 18] }, { value: '♂', staticData: ['', '', ''] }],\n  [{ value: 'A♦', staticData: ['2♦', 'A♦', 31] }, { value: 'A♥', staticData: ['A♦', 'A♥', 30] }, { value: '8♠', staticData: ['K♣', '8♠', 29] }, { value: '10♦', staticData: ['Q♣', '10♦', 28] }, { value: '10♥', staticData: ['J♣', '10♥', 27] }, { value: '4♠', staticData: ['10♣', '4♠', 26] }, { value: '6♦', staticData: ['9♣', '6♦', 25] }, { value: '♃', staticData: ['', '', ''] }],\n  [{ value: '5♦', staticData: ['9♦', '5♦', 38] }, { value: '7♣', staticData: ['8♦', '7♣', 37] }, { value: '9♥', staticData: ['7♦', '9♥', 36] }, { value: '3♠', staticData: ['6♦', '3♠', 35] }, { value: '3♣', staticData: ['5♦', '3♣', 34] }, { value: '5♥', staticData: ['4♦', '5♥', 33] }, { value: 'Q♦', staticData: ['3♦', 'Q♦', 32] }, { value: '♄', staticData: ['', '', ''] }],\n  [{ value: 'J♦', staticData: ['3♠', 'J♦', 45] }, { value: 'K♣', staticData: ['2♠', 'K♣', 44] }, { value: '2♣', staticData: ['A♠', '2♣', 43] }, { value: '7♠', staticData: ['K♦', '7♠', 42] }, { value: '9♦', staticData: ['Q♦', '9♦', 41] }, { value: 'J♣', staticData: ['J♦', 'J♣', 40] }, { value: 'Q♠', staticData: ['10♦', 'Q♠', 39] }, { value: '♅', staticData: ['', '', ''] }],\n  [{ value: 'Q♥', staticData: ['10♠', 'Q♥', 52] }, { value: '6♠', staticData: ['9♠', '6♠', 51] }, { value: '6♣', staticData: ['8♠', '6♣', 50] }, { value: '8♥', staticData: ['7♠', '8♥', 49] }, { value: '2♠', staticData: ['6♠', '2♠', 48] }, { value: '4♦', staticData: ['5♠', '4♦', 47] }, { value: '4♥', staticData: ['4♠', '4♥', 46] }, { value: '♆', staticData: ['', '', ''] }]\n];\n\nconst lineOfSuccession = [\n  'Q♠', '8♦', '7♣', 'J♠', '10♣', '4♠', '4♥', '10♠', 'Q♥', '9♣', '6♦', '3♠',\n  'J♦', 'J♣', '10♥', '5♠', '4♦', '5♥', '5♣', '4♣', '6♥', '3♦', 'Q♦', '9♦',\n  '5♦', '3♣', 'K♦', '7♠', '8♥', '7♥', 'A♠', '2♣', 'K♥', '9♠', '6♠', '2♠',\n  'K♣', '8♠', '6♣', '2♦', 'A♦', 'A♥', '3♥', 'Q♣', '10♦'\n];\n\nconst fixedCards = ['K♠', '8♣', 'J♥'];\nconst semiFixedPairs = [\n  { value1: 'A♣', value2: '2♥' },\n  { value1: '7♦', value2: '9♥' }\n];\n\n// Function to get the next card in the line of succession\nconst getNextCardInSuccession = (card) => {\n  const index = lineOfSuccession.indexOf(card);\n  if (index !== -1 && index < lineOfSuccession.length - 1) {\n    return lineOfSuccession[index + 1];\n  } else if (index === lineOfSuccession.length - 1) {\n    return lineOfSuccession[0];\n  }\n  return card;\n};\n\n// Function to generate the next spread based on the current spread\nconst generateNextSpread = (currentSpread) => {\n  const nextSpread = JSON.parse(JSON.stringify(currentSpread));\n\n  // Handle semi-fixed cards\n  semiFixedPairs.forEach(pair => {\n    nextSpread.forEach(row => {\n      row.forEach(card => {\n        if (card.value === pair.value1) {\n          card.value = pair.value2;\n        } else if (card.value === pair.value2) {\n          card.value = pair.value1;\n        }\n      });\n    });\n  });\n\n  // Handle regular cards\n  nextSpread.forEach(row => {\n    row.forEach(card => {\n      if (!fixedCards.includes(card.value) && !semiFixedPairs.some(pair => pair.value1 === card.value || pair.value2 === card.value)) {\n        card.value = getNextCardInSuccession(card.value);\n      }\n    });\n  });\n\n  return nextSpread;\n};\n\n// Function to generate all spreads\nconst generateAllSpreads = () => {\n  const spreads = [initialSpread];\n  for (let i = 1; i < 90; i++) {\n    spreads.push(generateNextSpread(spreads[i - 1]));\n  }\n  return spreads;\n};\n\n// Function to get the card for a given birthday\nconst getCardForBirthday = (birthday) => {\n  const [year, month, day] = birthday.split('-');\n  const birthDateString = `${parseInt(day)}-${new Date(year, month - 1).toLocaleString('default', { month: 'short' })}`;\n  console.log('Formatted Birthday:', birthDateString); // Debugging log\n  const entry = birthdayCardMapping.find(entry => entry.birthday === birthDateString);\n  return entry ? entry.card : null;\n};\n\nconst calculateAge = (birthdate) => {\n  const today = new Date();\n  const birthDate = new Date(birthdate);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDifference = today.getMonth() - birthDate.getMonth();\n  if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n\nconst findCardPositionInSpread = (card, spread) => {\n  for (let rowIndex = 0; rowIndex < spread.length; rowIndex++) {\n    for (let colIndex = 0; colIndex < spread[rowIndex].length; colIndex++) {\n      if (spread[rowIndex][colIndex].value === card) {\n        return { rowIndex, colIndex };\n      }\n    }\n  }\n  return null;\n};\n\nconst findCardPosition = (card, spread) => {\n  for (let row of spread) {\n    for (let cell of row) {\n      if (cell.value === card) {\n        return parseInt(cell.staticData[2]);\n      }\n    }\n  }\n  return null;\n};\n\nconst isPlanetSymbol = (symbol) => {\n  return /[☉☿♀♂♃♄♅♆]/.test(symbol);\n};\n\nconst getCardColor = (card) => {\n  if (card.includes('♥') || card.includes('♦')) {\n    return 'red';\n  } else if (card.includes('♠') || card.includes('♣')) {\n    return 'black';\n  }\n  return 'black';\n};\n\nconst getNext12Positions = (startPosition) => {\n  const positions = [];\n  for (let i = 0; i < 12; i++) {\n    positions.push(((startPosition + i) % 52) + 1);\n  }\n  return positions;\n};\n\n// Function to calculate planetary days based on birth day of the week\nfunction calculatePlanetaryDays(birthDate) {\n  const planets = ['Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'];\n\n  // Current date\n  const today = new Date();\n  \n  // Get the day of the week on which the person was born (0 = Sunday, 6 = Saturday)\n  const birthDayOfWeek = birthDate.getDay();\n  \n  // Get today’s day of the week\n  const todayDayOfWeek = today.getDay();\n  \n  // Adjust Mercury day: Find the most recent Mercury day that aligns with the weekly spread's starting day\n  let mercuryDay = new Date(today);\n\n  // Adjust the starting day for Mercury (the birth day of the week)\n  mercuryDay.setDate(today.getDate() - ((todayDayOfWeek - birthDayOfWeek + 7) % 7) + 1); // Added +1 to push the day forward\n\n  const planetaryDays = [];\n\n  // Loop through planets and assign days based on the Mercury day\n  planets.forEach((planet, index) => {\n    let planetDay = new Date(mercuryDay);\n    planetDay.setDate(mercuryDay.getDate() + index); // Set the next planetary day\n    planetaryDays.push({\n      planet: planet,\n      date: planetDay.toLocaleDateString('en-US', { month: 'numeric', day: 'numeric', year: 'numeric' })\n    });\n  });\n\n  return planetaryDays;\n}\n\n\n\nconst App = () => {\n  const [selectedPlate, setSelectedPlate] = useState(0);\n  const [birthdate, setBirthdate] = useState('');\n  const [highlightedCards, setHighlightedCards] = useState([]);\n  const [highlightedPositions, setHighlightedPositions] = useState([]);\n  const [clickedCards, setClickedCards] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalCardData, setModalCardData] = useState(null);\n  const [weeklyPlanetCards, setWeeklyPlanetCards] = useState([]);\n  const [weeklyPlanetDates, setWeeklyPlanetDates] = useState([]);\n  const spreads = generateAllSpreads();\n  const [planetaryDays, setPlanetaryDays] = useState([]);\n  const [isReadingPanelOpen, setIsReadingPanelOpen] = useState(false);\n\n\n  const handlePlateChange = (e) => {\n    const newPlate = Number(e.target.value);\n    setSelectedPlate(newPlate);\n    if (highlightedCards.length > 0) {\n      const position = findCardPosition(highlightedCards[0], spreads[newPlate]);\n      if (position) {\n        setHighlightedPositions([position, ...getNext12Positions(position)]);\n      }\n    }\n  };\n\n  const handleBirthdateChange = (e) => {\n    e.preventDefault();\n    const inputBirthdate = e.target.value;\n    setBirthdate(inputBirthdate);\n    const card = getCardForBirthday(inputBirthdate);\n    if (card) {\n      setHighlightedCards([card]);\n      const age = calculateAge(inputBirthdate);\n      const plate = age % 90;\n      setSelectedPlate(plate);\n      const position = findCardPosition(card, spreads[plate]);\n      if (position) {\n        setHighlightedPositions([position, ...getNext12Positions(position)]);\n      }\n    } else {\n      setHighlightedCards([]);\n      setHighlightedPositions([]);\n    }\n  };\n  const resetToYearlySpread = () => {\n    if (birthdate) {\n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const age = calculateAge(birthdate);\n        const plate = age % 90;\n        setSelectedPlate(plate);\n        const position = findCardPosition(card, spreads[plate]);\n        if (position) {\n          setHighlightedPositions([position, ...getNext12Positions(position)]);\n        }\n        // Reset weekly planet cards\n        setWeeklyPlanetCards([]);\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n        setWeeklyPlanetCards([]);\n      }\n    }\n  };\n  \n  const handleCardClick = (card) => {\n    setClickedCards((prevClickedCards) => {\n      if (prevClickedCards.includes(card)) {\n        const { rowIndex, colIndex } = findCardPositionInSpread(card, spreads[selectedPlate]);\n        const staticDataPosition = spreads[selectedPlate][rowIndex][colIndex].staticData[2];\n        const staticData = staticDataMapping[staticDataPosition];\n\n        setModalCardData({\n          value: card,\n          staticData: staticData || { value1: '', value2: '' },\n          ...cardData[card],\n          displacingCard: cardData[staticData.value2],\n          staticCard1: cardData[staticData.value1],\n        });\n        setModalIsOpen(true);\n        return prevClickedCards.filter((clickedCard) => clickedCard !== card);\n      } else {\n        return [...prevClickedCards, card];\n      }\n    });\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setModalCardData(null);\n  };\n\n  const handleWeeklyPlateClick = () => {\n    if (birthdate) {\n      const weeklyPlateNumber = calculateWeeklyNumber(birthdate);\n      setSelectedPlate(weeklyPlateNumber);\n      setClickedCards([]);\n\n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const position = findCardPosition(card, spreads[weeklyPlateNumber]);\n        if (position) {\n          const next12Positions = getNext12Positions(position);\n          setHighlightedPositions([position, ...next12Positions]);\n\n          const planetCards = next12Positions.slice(0, 7).map(pos => {\n            const foundCard = spreads[weeklyPlateNumber].flat().find(cell => parseInt(cell.staticData[2]) === pos);\n            return foundCard ? foundCard.value : '';\n          });\n          setWeeklyPlanetCards(planetCards);\n\n          const birthDateObj = new Date(birthdate);\n          const calculatedPlanetaryDays = calculatePlanetaryDays(birthDateObj);\n          setPlanetaryDays(calculatedPlanetaryDays);\n        }\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n        setWeeklyPlanetCards([]);\n        setWeeklyPlanetDates([]);\n      }\n    }\n  };\n\n  const calculateWeeklyNumber = (birthdate) => {\n    const birth = new Date(birthdate);\n    const now = new Date();\n    const diff = now - birth;\n    const days = diff / 1000 / 60 / 60 / 24;\n    const weeks = days / 7;\n    const A = weeks / 90;\n    const B = A - Math.floor(A);\n    const currentWeeklyNumber = parseInt(B * 90);\n    return currentWeeklyNumber;\n  };\n\n  const handleSevenWeeklyPlateClick = () => {\n    if (birthdate) {\n      const weeklySevenPlateNumber = calculateSevenWeeklyNumber(birthdate);\n      setSelectedPlate(weeklySevenPlateNumber);\n      setClickedCards([]);\n  \n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const position = findCardPosition(card, spreads[weeklySevenPlateNumber]);\n        if (position) {\n          const next12Positions = getNext12Positions(position);\n          setHighlightedPositions([position, ...getNext12Positions(position)]);\n  \n          // Get the cards for the 1st through 7th positions (7 Week Spread)\n          const planetCards = next12Positions.slice(0, 7).map(pos => {\n            const foundCard = spreads[weeklySevenPlateNumber].flat().find(cell => parseInt(cell.staticData[2]) === pos);\n            return foundCard ? foundCard.value : '';\n          });\n          setWeeklyPlanetCards(planetCards);\n  \n          // Since you're not showing the planetary days anymore, we don't need to set dates.\n          // If you wish to add planetary dates, you can do so here using the same logic as before.\n        }\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n        setWeeklyPlanetCards([]);\n      }\n    }\n  };\n  \n\n  const calculateSevenWeeklyNumber = (birthdate) => {\n    const birth = new Date(birthdate);\n    const now = new Date();\n    const diff = now - birth;\n    const days = diff / 1000 / 60 / 60 / 24;\n    const cycle = days / 49;\n    const A = cycle / 90;\n    const B = A - Math.floor(A);\n    const currentSevenWeeklyNumber = parseInt(B * 90);\n    return currentSevenWeeklyNumber;\n  };\n\n  return (\n    <ChakraProvider>\n      <Box className=\"App\" p={5}>\n        <VStack spacing={4} align=\"stretch\" mb={6} maxWidth=\"550px\" margin=\"auto\">\n          <Heading as=\"h1\" size=\"xl\" textAlign=\"center\">\n            Planetary Table\n          </Heading>\n          <Flex direction={{ base: \"column\", md: \"row\" }} justify=\"space-between\" align=\"center\" wrap=\"wrap\" gap={4}>\n            <Box flex=\"1\">\n              <Select onChange={handlePlateChange} value={selectedPlate}>\n                {spreads.map((_, index) => (\n                  <option value={index} key={index}>\n                    Plate {index}\n                  </option>\n                ))}\n              </Select>\n            </Box>\n            <Box flex=\"1\">\n              <Input\n                type=\"date\"\n                value={birthdate}\n                onChange={handleBirthdateChange}\n                placeholder=\"Enter Birthdate\"\n              />\n            </Box>\n            <Box flex=\"1\">\n              <Select\n                onChange={(e) => {\n                  const selectedAction = e.target.value;\n                  if (selectedAction === \"weekly\") {\n                    handleWeeklyPlateClick();\n                  } else if (selectedAction === \"sevenWeekly\") {\n                    handleSevenWeeklyPlateClick();\n                  } else if (selectedAction === \"resetYearly\") {\n                    resetToYearlySpread();\n                  }\n                }}\n              >\n                <option value=\"\">Select an Action</option>\n                <option value=\"weekly\">Show Weekly Plate</option>\n                <option value=\"sevenWeekly\">Show 7 Weekly Plate</option>\n                <option value=\"resetYearly\">Reset to Yearly Spread</option>\n              </Select>\n            </Box>\n          </Flex>\n        </VStack>\n\n        <table border=\"1\">\n          <tbody>\n            {spreads[selectedPlate].map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                {row.map((cell, cellIndex) => (\n                  <td\n                    key={cellIndex}\n                    onClick={() => handleCardClick(cell.value)}\n                    style={{\n                      border: highlightedCards.includes(cell.value) || highlightedPositions.includes(parseInt(cell.staticData[2]))\n                        ? '3px solid black'\n                        : '1px solid black',\n                      textAlign: 'center',\n                      color: isPlanetSymbol(cell.value) ? 'red' : getCardColor(cell.value),\n                      backgroundColor: highlightedCards.includes(cell.value)\n                        ? 'yellow'\n                        : highlightedPositions.includes(parseInt(cell.staticData[2]))\n                        ? '#f2f2f2'\n                        : clickedCards.includes(cell.value)\n                        ? 'yellow'\n                        : 'white',\n                      position: 'relative',\n                    }}\n                  >\n                    {cell.value !== 'x' ? (\n                      <>\n                        {cell.value}\n                        {!isPlanetSymbol(cell.value) && (\n                          <div className=\"static-data\">\n                            <div style={{ color: getCardColor(cell.staticData[0]) }}>{cell.staticData[0]}</div>\n                            <div style={{ color: getCardColor(cell.staticData[1]) }}>{cell.staticData[1]}</div>\n                          </div>\n                        )}\n                      </>\n                    ) : (\n                      cell.value\n                    )}\n                  </td>\n                ))}\n              </tr>\n            ))}\n            <tr>\n              {['♆', '♅', '♄', '♃', '♂', '♀', '☿', ''].map((planet, index) => (\n                <td\n                  key={index}\n                  style={{\n                    border: '1px solid black',\n                    textAlign: 'center',\n                    color: 'red', // All planets are in red\n                    position: 'relative'\n                  }}\n                >\n                  {planet}\n                </td>\n              ))}\n            </tr>\n          </tbody>\n        </table>\n\n        {weeklyPlanetCards.length > 0 && (\n          <div className=\"weekly-planet-cards\" style={{ marginTop: '20px', textAlign: 'center' }}>\n            <h2>{selectedPlate === calculateSevenWeeklyNumber(birthdate) ? '7 Week Spread' : 'Weekly Planet Cards'}</h2>\n            <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', gap: '5px' }}>\n              {weeklyPlanetCards.map((card, index) => (\n                <div key={index} style={{ textAlign: 'center', width: '60px' }}>\n                  <div style={{\n                    border: '1px solid black',\n                    padding: '5px',\n                    marginBottom: '2px',\n                    backgroundColor: highlightedCards.includes(card) ? 'yellow' : 'white',\n                    color: getCardColor(card)\n                  }}>\n                    {card}\n                  </div>\n                  <div style={{ fontSize: '0.8em' }}>{['Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'][index]}</div>\n                </div>\n                \n              ))}\n            </div>\n          </div>\n        )}\n\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          style={{\n            content: {\n              maxWidth: '600px',\n              height:'600px',\n              margin: '0 auto',\n            },\n          }}\n        >\n          {modalCardData && (\n            <div>\n              <h2>{modalCardData.value}</h2>\n              <p><strong>Keywords:</strong> {modalCardData.keywords}</p>\n              <p><strong>Dates:</strong> {modalCardData.dates}</p>\n              {modalCardData.staticData && (\n                <>\n                  <hr/>\n                  <h3>Displacing: {modalCardData.displacingCard.staticData[1]}</h3>\n                  {modalCardData.displacingCard && (\n                    <>\n                      <p><strong>Displacing Card Position:</strong> {modalCardData.displacingCard.position}</p>\n                      <p><strong>Displacing Keywords:</strong> {modalCardData.displacingCard.keywords}</p>\n                      <p><strong>Displacing Dates:</strong> {modalCardData.displacingCard.dates}</p>\n                    </>\n                  )}\n                  <hr/>\n                  <h3>Next Displacement Card: {modalCardData.displacingCard.staticData[0]}</h3>\n                  {modalCardData.staticCard1 && (\n                    <>\n                      <p><strong>Static Keywords:</strong> {modalCardData.staticCard1.keywords}</p>\n                      <p><strong>Static Dates:</strong> {modalCardData.staticCard1.dates}</p>\n                    </>\n                  )}\n                </>\n              )}\n              <button onClick={closeModal}>Close</button>\n            </div>\n          )}\n        </Modal>\n      </Box>\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}