{"ast":null,"code":"var _jsxFileName = \"/workspaces/cardology/src/components/WeeklyReadingPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Text, VStack, CloseButton } from '@chakra-ui/react';\nimport cardData2 from './cardData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklyReadingPanel = ({\n  isOpen,\n  onClose,\n  weeklyCards,\n  cardData\n}) => {\n  _s();\n  const [reading, setReading] = useState('');\n  const generateReading = async () => {\n    const cardInfo = weeklyCards.map(card => {\n      const cardDetails = cardData2.find(c => c.Card === card);\n      return cardDetails ? `${card}: ${cardDetails.Description}` : card;\n    }).join('\\n\\n');\n    const prompt = `Based on the following cards for a weekly reading, provide an insightful and detailed interpretation for the week ahead:\\n\\n${cardInfo}`;\n    try {\n      const response = await fetch('/api/generate-reading', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to generate reading');\n      }\n      const data = await response.json();\n      setReading(data.reading);\n    } catch (error) {\n      console.error('Error generating reading:', error);\n      setReading('Failed to generate reading. Please try again.');\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"fixed\",\n    right: 0,\n    top: 0,\n    width: \"400px\",\n    height: \"100%\",\n    bg: \"white\",\n    boxShadow: \"-2px 0 10px rgba(0, 0, 0, 0.1)\",\n    p: 4,\n    overflowY: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n      position: \"absolute\",\n      right: 2,\n      top: 2,\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        fontWeight: \"bold\",\n        children: \"Weekly Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: generateReading,\n        children: \"Generate Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), reading && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          whiteSpace: \"pre-wrap\",\n          children: reading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyReadingPanel, \"N2GYzcGTTcPmsY2SufbotsuS0mo=\");\n_c = WeeklyReadingPanel;\nexport default WeeklyReadingPanel;\nvar _c;\n$RefreshReg$(_c, \"WeeklyReadingPanel\");","map":{"version":3,"names":["React","useState","Box","Button","Text","VStack","CloseButton","cardData2","jsxDEV","_jsxDEV","WeeklyReadingPanel","isOpen","onClose","weeklyCards","cardData","_s","reading","setReading","generateReading","cardInfo","map","card","cardDetails","find","c","Card","Description","join","prompt","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","position","right","top","width","height","bg","boxShadow","p","overflowY","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","spacing","align","fontSize","fontWeight","colorScheme","mt","whiteSpace","_c","$RefreshReg$"],"sources":["/workspaces/cardology/src/components/WeeklyReadingPanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Button, Text, VStack, CloseButton } from '@chakra-ui/react';\nimport cardData2 from './cardData.json';\n\nconst WeeklyReadingPanel = ({ isOpen, onClose, weeklyCards, cardData }) => {\n  const [reading, setReading] = useState('');\n\n  const generateReading = async () => {\n    const cardInfo = weeklyCards.map(card => {\n      const cardDetails = cardData2.find(c => c.Card === card);\n      return cardDetails ? `${card}: ${cardDetails.Description}` : card;\n    }).join('\\n\\n');\n\n    const prompt = `Based on the following cards for a weekly reading, provide an insightful and detailed interpretation for the week ahead:\\n\\n${cardInfo}`;\n\n    try {\n      const response = await fetch('/api/generate-reading', {\n        method: 'POST', \n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ prompt }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to generate reading');\n      }\n\n      const data = await response.json();\n      setReading(data.reading);\n    } catch (error) {\n      console.error('Error generating reading:', error);\n      setReading('Failed to generate reading. Please try again.');\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <Box\n      position=\"fixed\"\n      right={0}\n      top={0}\n      width=\"400px\"\n      height=\"100%\"\n      bg=\"white\"\n      boxShadow=\"-2px 0 10px rgba(0, 0, 0, 0.1)\"\n      p={4}\n      overflowY=\"auto\"\n    >\n      <CloseButton position=\"absolute\" right={2} top={2} onClick={onClose} />\n      <VStack spacing={4} align=\"stretch\">\n        <Text fontSize=\"xl\" fontWeight=\"bold\">Weekly Reading</Text>\n        <Button colorScheme=\"blue\" onClick={generateReading}>Generate Reading</Button>\n        {reading && (\n          <Box mt={4}>\n            <Text whiteSpace=\"pre-wrap\">{reading}</Text>\n          </Box>\n        )}\n      </VStack>\n    </Box>\n  );\n};\n\nexport default WeeklyReadingPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}