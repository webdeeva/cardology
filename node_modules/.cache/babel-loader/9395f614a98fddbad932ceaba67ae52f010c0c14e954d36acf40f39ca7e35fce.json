{"ast":null,"code":"var _jsxFileName = \"/workspaces/cardology/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport birthdayCardMapping from './birthdayCardMapping.json'; // Ensure this path is correct\nimport cardData from './cardData.json'; // Ensure this path is correct\nimport Modal from 'react-modal';\n\n// Static Data Mapping\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst staticDataMapping = {\n  1: {\n    value1: 'J♠',\n    value2: '10♣'\n  },\n  2: {\n    value1: 'Q♠',\n    value2: '8♦'\n  },\n  3: {\n    value1: 'K♠',\n    value2: 'K♠'\n  },\n  4: {\n    value1: 'A♥',\n    value2: '3♥'\n  },\n  5: {\n    value1: '2♥',\n    value2: 'A♣'\n  },\n  6: {\n    value1: '3♥',\n    value2: 'Q♣'\n  },\n  7: {\n    value1: '4♥',\n    value2: '10♠'\n  },\n  8: {\n    value1: '5♥',\n    value2: '4♣'\n  },\n  9: {\n    value1: '6♥',\n    value2: '3♦'\n  },\n  10: {\n    value1: '7♥',\n    value2: 'A♠'\n  },\n  11: {\n    value1: '8♥',\n    value2: '7♥'\n  },\n  12: {\n    value1: '9♥',\n    value2: '7♦'\n  },\n  13: {\n    value1: '10♥',\n    value2: '5♠'\n  },\n  14: {\n    value1: 'J♥',\n    value2: 'J♥'\n  },\n  15: {\n    value1: 'Q♥',\n    value2: '9♣'\n  },\n  16: {\n    value1: 'K♥',\n    value2: '9♠'\n  },\n  17: {\n    value1: 'A♣',\n    value2: '2♥'\n  },\n  18: {\n    value1: '2♣',\n    value2: 'K♥'\n  },\n  19: {\n    value1: '3♣',\n    value2: 'K♦'\n  },\n  20: {\n    value1: '4♣',\n    value2: '6♥'\n  },\n  21: {\n    value1: '5♣',\n    value2: '4♣'\n  },\n  22: {\n    value1: '6♣',\n    value2: '2♦'\n  },\n  23: {\n    value1: '7♣',\n    value2: 'J♠'\n  },\n  24: {\n    value1: '8♣',\n    value2: '8♣'\n  },\n  25: {\n    value1: '9♣',\n    value2: '6♦'\n  },\n  26: {\n    value1: '10♣',\n    value2: '4♠'\n  },\n  27: {\n    value1: 'J♣',\n    value2: '10♥'\n  },\n  28: {\n    value1: 'Q♣',\n    value2: '10♦'\n  },\n  29: {\n    value1: 'K♣',\n    value2: '8♠'\n  },\n  30: {\n    value1: 'A♦',\n    value2: 'A♥'\n  },\n  31: {\n    value1: '2♦',\n    value2: 'A♦'\n  },\n  32: {\n    value1: '3♦',\n    value2: 'Q♦'\n  },\n  33: {\n    value1: '4♦',\n    value2: '5♥'\n  },\n  34: {\n    value1: '5♦',\n    value2: '3♣'\n  },\n  35: {\n    value1: '6♦',\n    value2: '3♠'\n  },\n  36: {\n    value1: '7♦',\n    value2: '9♥'\n  },\n  37: {\n    value1: '8♦',\n    value2: '7♣'\n  },\n  38: {\n    value1: '9♦',\n    value2: '5♦'\n  },\n  39: {\n    value1: '10♦',\n    value2: 'Q♠'\n  },\n  40: {\n    value1: 'J♦',\n    value2: 'J♣'\n  },\n  41: {\n    value1: 'Q♦',\n    value2: '9♦'\n  },\n  42: {\n    value1: 'K♦',\n    value2: '7♠'\n  },\n  43: {\n    value1: 'A♠',\n    value2: '2♣'\n  },\n  44: {\n    value1: '2♠',\n    value2: 'K♣'\n  },\n  45: {\n    value1: '3♠',\n    value2: 'J♦'\n  },\n  46: {\n    value1: '4♠',\n    value2: '4♥'\n  },\n  47: {\n    value1: '5♠',\n    value2: '4♦'\n  },\n  48: {\n    value1: '6♠',\n    value2: '2♠'\n  },\n  49: {\n    value1: '7♠',\n    value2: '8♥'\n  },\n  50: {\n    value1: '8♠',\n    value2: '6♣'\n  },\n  51: {\n    value1: '9♠',\n    value2: '6♠'\n  },\n  52: {\n    value1: '10♠',\n    value2: 'Q♥'\n  }\n};\n\n// Initial setup for Age 0 spread\nconst initialSpread = [[{\n  value: '',\n  staticData: ['', '', '']\n}, {\n  value: '',\n  staticData: ['', '', '']\n}, {\n  value: 'K♠',\n  staticData: ['K♠', 'K♠', 3]\n}, {\n  value: '8♦',\n  staticData: ['Q♠', '8♦', 2]\n}, {\n  value: '10♣',\n  staticData: ['J♠', '10♣', 1]\n}, {\n  value: '',\n  staticData: ['', '', '']\n}, {\n  value: '',\n  staticData: ['', '', '']\n}, {\n  value: '☉',\n  staticData: ['', '', '']\n}], [{\n  value: 'A♠',\n  staticData: ['7♥', 'A♠', 10]\n}, {\n  value: '3♦',\n  staticData: ['6♥', '3♦', 9]\n}, {\n  value: '5♣',\n  staticData: ['5♥', '5♣', 8]\n}, {\n  value: '10♠',\n  staticData: ['4♥', '10♠', 7]\n}, {\n  value: 'Q♣',\n  staticData: ['3♥', 'Q♣', 6]\n}, {\n  value: 'A♣',\n  staticData: ['2♥', 'A♣', 5]\n}, {\n  value: '3♥',\n  staticData: ['A♥', '3♥', 4]\n}, {\n  value: '☿',\n  staticData: ['', '', '']\n}], [{\n  value: '2♥',\n  staticData: ['A♣', '2♥', 17]\n}, {\n  value: '9♠',\n  staticData: ['K♥', '9♠', 16]\n}, {\n  value: '9♣',\n  staticData: ['Q♥', '9♣', 15]\n}, {\n  value: 'J♥',\n  staticData: ['J♥', 'J♥', 14]\n}, {\n  value: '5♠',\n  staticData: ['10♥', '5♠', 13]\n}, {\n  value: '7♦',\n  staticData: ['9♥', '7♦', 12]\n}, {\n  value: '7♥',\n  staticData: ['8♥', '7♥', 11]\n}, {\n  value: '♀',\n  staticData: ['', '', '']\n}], [{\n  value: '8♣',\n  staticData: ['8♣', '8♣', 24]\n}, {\n  value: 'J♠',\n  staticData: ['7♣', 'J♠', 23]\n}, {\n  value: '2♦',\n  staticData: ['6♣', '2♦', 22]\n}, {\n  value: '4♣',\n  staticData: ['5♣', '4♣', 21]\n}, {\n  value: '6♥',\n  staticData: ['4♣', '6♥', 20]\n}, {\n  value: 'K♦',\n  staticData: ['3♣', 'K♦', 19]\n}, {\n  value: 'K♥',\n  staticData: ['2♣', 'K♥', 18]\n}, {\n  value: '♂',\n  staticData: ['', '', '']\n}], [{\n  value: 'A♦',\n  staticData: ['2♦', 'A♦', 31]\n}, {\n  value: 'A♥',\n  staticData: ['A♦', 'A♥', 30]\n}, {\n  value: '8♠',\n  staticData: ['K♣', '8♠', 29]\n}, {\n  value: '10♦',\n  staticData: ['Q♣', '10♦', 28]\n}, {\n  value: '10♥',\n  staticData: ['J♣', '10♥', 27]\n}, {\n  value: '4♠',\n  staticData: ['10♣', '4♠', 26]\n}, {\n  value: '6♦',\n  staticData: ['9♣', '6♦', 25]\n}, {\n  value: '♃',\n  staticData: ['', '', '']\n}], [{\n  value: '5♦',\n  staticData: ['9♦', '5♦', 38]\n}, {\n  value: '7♣',\n  staticData: ['8♦', '7♣', 37]\n}, {\n  value: '9♥',\n  staticData: ['7♦', '9♥', 36]\n}, {\n  value: '3♠',\n  staticData: ['6♦', '3♠', 35]\n}, {\n  value: '3♣',\n  staticData: ['5♦', '3♣', 34]\n}, {\n  value: '5♥',\n  staticData: ['4♦', '5♥', 33]\n}, {\n  value: 'Q♦',\n  staticData: ['3♦', 'Q♦', 32]\n}, {\n  value: '♄',\n  staticData: ['', '', '']\n}], [{\n  value: 'J♦',\n  staticData: ['3♠', 'J♦', 45]\n}, {\n  value: 'K♣',\n  staticData: ['2♠', 'K♣', 44]\n}, {\n  value: '2♣',\n  staticData: ['A♠', '2♣', 43]\n}, {\n  value: '7♠',\n  staticData: ['K♦', '7♠', 42]\n}, {\n  value: '9♦',\n  staticData: ['Q♦', '9♦', 41]\n}, {\n  value: 'J♣',\n  staticData: ['J♦', 'J♣', 40]\n}, {\n  value: 'Q♠',\n  staticData: ['10♦', 'Q♠', 39]\n}, {\n  value: '♅',\n  staticData: ['', '', '']\n}], [{\n  value: 'Q♥',\n  staticData: ['10♠', 'Q♥', 52]\n}, {\n  value: '6♠',\n  staticData: ['9♠', '6♠', 51]\n}, {\n  value: '6♣',\n  staticData: ['8♠', '6♣', 50]\n}, {\n  value: '8♥',\n  staticData: ['7♠', '8♥', 49]\n}, {\n  value: '2♠',\n  staticData: ['6♠', '2♠', 48]\n}, {\n  value: '4♦',\n  staticData: ['5♠', '4♦', 47]\n}, {\n  value: '4♥',\n  staticData: ['4♠', '4♥', 46]\n}, {\n  value: '♆',\n  staticData: ['', '', '']\n}]];\nconst lineOfSuccession = ['Q♠', '8♦', '7♣', 'J♠', '10♣', '4♠', '4♥', '10♠', 'Q♥', '9♣', '6♦', '3♠', 'J♦', 'J♣', '10♥', '5♠', '4♦', '5♥', '5♣', '4♣', '6♥', '3♦', 'Q♦', '9♦', '5♦', '3♣', 'K♦', '7♠', '8♥', '7♥', 'A♠', '2♣', 'K♥', '9♠', '6♠', '2♠', 'K♣', '8♠', '6♣', '2♦', 'A♦', 'A♥', '3♥', 'Q♣', '10♦'];\nconst fixedCards = ['K♠', '8♣', 'J♥'];\nconst semiFixedPairs = [{\n  value1: 'A♣',\n  value2: '2♥'\n}, {\n  value1: '7♦',\n  value2: '9♥'\n}];\n\n// Function to get the next card in the line of succession\nconst getNextCardInSuccession = card => {\n  const index = lineOfSuccession.indexOf(card);\n  if (index !== -1 && index < lineOfSuccession.length - 1) {\n    return lineOfSuccession[index + 1];\n  } else if (index === lineOfSuccession.length - 1) {\n    return lineOfSuccession[0];\n  }\n  return card;\n};\n\n// Function to generate the next spread based on the current spread\nconst generateNextSpread = currentSpread => {\n  const nextSpread = JSON.parse(JSON.stringify(currentSpread));\n\n  // Handle semi-fixed cards\n  semiFixedPairs.forEach(pair => {\n    nextSpread.forEach(row => {\n      row.forEach(card => {\n        if (card.value === pair.value1) {\n          card.value = pair.value2;\n        } else if (card.value === pair.value2) {\n          card.value = pair.value1;\n        }\n      });\n    });\n  });\n\n  // Handle regular cards\n  nextSpread.forEach(row => {\n    row.forEach(card => {\n      if (!fixedCards.includes(card.value) && !semiFixedPairs.some(pair => pair.value1 === card.value || pair.value2 === card.value)) {\n        card.value = getNextCardInSuccession(card.value);\n      }\n    });\n  });\n  return nextSpread;\n};\n\n// Function to generate all spreads\nconst generateAllSpreads = () => {\n  const spreads = [initialSpread];\n  for (let i = 1; i < 90; i++) {\n    spreads.push(generateNextSpread(spreads[i - 1]));\n  }\n  return spreads;\n};\n\n// Function to get the card for a given birthday\nconst getCardForBirthday = birthday => {\n  const [year, month, day] = birthday.split('-');\n  const birthDateString = `${parseInt(day)}-${new Date(year, month - 1).toLocaleString('default', {\n    month: 'short'\n  })}`;\n  console.log('Formatted Birthday:', birthDateString); // Debugging log\n  const entry = birthdayCardMapping.find(entry => entry.birthday === birthDateString);\n  return entry ? entry.card : null;\n};\nconst calculateAge = birthdate => {\n  const today = new Date();\n  const birthDate = new Date(birthdate);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDifference = today.getMonth() - birthDate.getMonth();\n  if (monthDifference < 0 || monthDifference === 0 && today.getDate() < birthDate.getDate()) {\n    age--;\n  }\n  return age;\n};\nconst findCardPositionInSpread = (card, spread) => {\n  for (let rowIndex = 0; rowIndex < spread.length; rowIndex++) {\n    for (let colIndex = 0; colIndex < spread[rowIndex].length; colIndex++) {\n      if (spread[rowIndex][colIndex].value === card) {\n        return {\n          rowIndex,\n          colIndex\n        };\n      }\n    }\n  }\n  return null;\n};\nconst isPlanetSymbol = symbol => {\n  return /[☉☿♀♂♃♄♅♆]/.test(symbol);\n};\nconst getCardColor = card => {\n  if (card.includes('♥') || card.includes('♦')) {\n    return 'red';\n  } else if (card.includes('♠') || card.includes('♣')) {\n    return 'black';\n  }\n  return 'black';\n};\n\n// New function to get the next 12 static data positions\nconst getNext12Positions = startPosition => {\n  const positions = [];\n  for (let i = 0; i < 12; i++) {\n    positions.push((startPosition + i) % 52 + 1);\n  }\n  return positions;\n};\n\n// New function to find the position of a card in the spread\nconst findCardPosition = (card, spread) => {\n  for (let row of spread) {\n    for (let cell of row) {\n      if (cell.value === card) {\n        return parseInt(cell.staticData[2]);\n      }\n    }\n  }\n  return null;\n};\n\n// New function to get the day of the week (0-6) for a given date\nconst getDayOfWeek = dateString => {\n  const date = new Date(dateString);\n  return date.getDay();\n};\n\n// New function to calculate planet dates based on birth day of week\nconst calculatePlanetDates = birthdate => {\n  const now = new Date();\n  const birth = new Date(birthdate);\n  const birthDayOfWeek = birth.getDay();\n  const currentDayOfWeek = now.getDay();\n\n  // Calculate the start of the current week based on the birth day of week\n  const currentWeekStart = new Date(now);\n  currentWeekStart.setDate(now.getDate() - (currentDayOfWeek - birthDayOfWeek + 7) % 7);\n\n  // Ensure we're getting the most recent week\n  if (currentWeekStart > now) {\n    currentWeekStart.setDate(currentWeekStart.getDate() - 7);\n  }\n  const planetDates = [];\n  for (let i = 0; i < 7; i++) {\n    const date = new Date(currentWeekStart);\n    date.setDate(currentWeekStart.getDate() + i);\n    planetDates.push(date.toLocaleDateString('en-US', {\n      month: 'numeric',\n      day: 'numeric',\n      timeZone: 'America/New_York'\n    }));\n  }\n  return planetDates;\n};\nfunction calculatePlanetaryDays(birthDate) {\n  const planets = ['Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'];\n  const today = new Date();\n  const birthDayOfWeek = birthDate.getDay();\n  const startDayOfWeek = today.getDay();\n  let mercuryDay = new Date(today);\n  mercuryDay.setDate(today.getDate() - (startDayOfWeek - birthDayOfWeek + 7) % 7);\n  const planetaryDays = [];\n  planets.forEach((planet, index) => {\n    let planetDay = new Date(mercuryDay);\n    planetDay.setDate(mercuryDay.getDate() + index);\n    planetaryDays.push({\n      planet: planet,\n      date: planetDay.toDateString()\n    });\n  });\n  return planetaryDays;\n}\nconst App = () => {\n  _s();\n  const [selectedPlate, setSelectedPlate] = useState(0);\n  const [birthdate, setBirthdate] = useState('');\n  const [highlightedCards, setHighlightedCards] = useState([]);\n  const [highlightedPositions, setHighlightedPositions] = useState([]);\n  const [clickedCards, setClickedCards] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalCardData, setModalCardData] = useState(null);\n  const [weeklyPlanetCards, setWeeklyPlanetCards] = useState([]);\n  const [weeklyPlanetDates, setWeeklyPlanetDates] = useState([]);\n  const spreads = generateAllSpreads();\n  const [planetaryDays, setPlanetaryDays] = useState([]);\n  const handlePlateChange = e => {\n    const newPlate = Number(e.target.value);\n    setSelectedPlate(newPlate);\n    if (highlightedCards.length > 0) {\n      const position = findCardPosition(highlightedCards[0], spreads[newPlate]);\n      if (position) {\n        setHighlightedPositions([position, ...getNext12Positions(position)]);\n      }\n    }\n  };\n  const handleBirthdateChange = e => {\n    e.preventDefault(); // Prevent the default form submission\n    const inputBirthdate = e.target.value;\n    setBirthdate(inputBirthdate);\n    const card = getCardForBirthday(inputBirthdate);\n    if (card) {\n      setHighlightedCards([card]);\n      const age = calculateAge(inputBirthdate);\n      const plate = age % 90;\n      setSelectedPlate(plate);\n      const position = findCardPosition(card, spreads[plate]);\n      if (position) {\n        setHighlightedPositions([position, ...getNext12Positions(position)]);\n      }\n    } else {\n      setHighlightedCards([]);\n      setHighlightedPositions([]);\n    }\n  };\n  const handleCardClick = card => {\n    setClickedCards(prevClickedCards => {\n      if (prevClickedCards.includes(card)) {\n        const {\n          rowIndex,\n          colIndex\n        } = findCardPositionInSpread(card, spreads[selectedPlate]);\n        const staticDataPosition = spreads[selectedPlate][rowIndex][colIndex].staticData[2];\n        const staticData = staticDataMapping[staticDataPosition];\n        setModalCardData({\n          value: card,\n          staticData: staticData || {\n            value1: '',\n            value2: ''\n          },\n          ...cardData[card],\n          displacingCard: cardData[staticData.value2],\n          staticCard1: cardData[staticData.value1]\n        });\n        setModalIsOpen(true);\n        return prevClickedCards.filter(clickedCard => clickedCard !== card);\n      } else {\n        return [...prevClickedCards, card];\n      }\n    });\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setModalCardData(null);\n  };\n  const handleWeeklyPlateClick = () => {\n    if (birthdate) {\n      const weeklyPlateNumber = calculateWeeklyNumber(birthdate);\n      setSelectedPlate(weeklyPlateNumber);\n      setClickedCards([]);\n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const position = findCardPosition(card, spreads[weeklyPlateNumber]);\n        if (position) {\n          const next12Positions = getNext12Positions(position);\n          setHighlightedPositions([position, ...next12Positions]);\n\n          // Get the cards for the 1st through 7th positions\n          const planetCards = next12Positions.slice(0, 7).map(pos => {\n            const foundCard = spreads[weeklyPlateNumber].flat().find(cell => parseInt(cell.staticData[2]) === pos);\n            return foundCard ? foundCard.value : '';\n          });\n          setWeeklyPlanetCards(planetCards);\n\n          // Calculate planetary days\n          const birthDateObj = new Date(birthdate);\n          const calculatedPlanetaryDays = calculatePlanetaryDays(birthDateObj);\n          setPlanetaryDays(calculatedPlanetaryDays);\n\n          // Calculate dates for each planet using the new function\n          const planetDates = calculatePlanetDates(birthdate);\n          setWeeklyPlanetDates(planetDates);\n        }\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n        setWeeklyPlanetCards([]);\n        setWeeklyPlanetDates([]);\n      }\n    }\n  };\n  const calculateWeeklyNumber = birthdate => {\n    const birth = new Date(birthdate);\n    const now = new Date();\n    const diff = now - birth;\n    const days = diff / 1000 / 60 / 60 / 24;\n    const weeks = days / 7;\n    const A = weeks / 90;\n    const B = A - Math.floor(A);\n    const currentWeeklyNumber = parseInt(B * 90);\n    return currentWeeklyNumber;\n  };\n  const handleSevenWeeklyPlateClick = () => {\n    if (birthdate) {\n      const weeklySevenPlateNumber = calculateSevenWeeklyNumber(birthdate);\n      setSelectedPlate(weeklySevenPlateNumber);\n      setClickedCards([]);\n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const position = findCardPosition(card, spreads[weeklySevenPlateNumber]);\n        if (position) {\n          setHighlightedPositions([position, ...getNext12Positions(position)]);\n        }\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n      }\n    }\n  };\n  const calculateSevenWeeklyNumber = birthdate => {\n    const birth = new Date(birthdate);\n    const now = new Date();\n    const diff = now - birth;\n    const days = diff / 1000 / 60 / 60 / 24;\n    const cycle = days / 49;\n    const A = cycle / 90;\n    const B = A - Math.floor(A);\n    const currentSevenWeeklyNumber = parseInt(B * 90);\n    return currentSevenWeeklyNumber;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Planetary Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Plate:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handlePlateChange,\n        value: selectedPlate,\n        children: spreads.map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: [\"Plate \", index]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter Birthdate:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: birthdate,\n        onChange: handleBirthdateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleWeeklyPlateClick,\n      children: \"Show Weekly Plate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSevenWeeklyPlateClick,\n      children: \"Show 7 Weekly Plate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [spreads[selectedPlate].map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => handleCardClick(cell.value),\n            style: {\n              border: highlightedCards.includes(cell.value) || highlightedPositions.includes(parseInt(cell.staticData[2])) ? '3px solid black' : '1px solid black',\n              textAlign: 'center',\n              color: isPlanetSymbol(cell.value) ? 'red' : getCardColor(cell.value),\n              backgroundColor: highlightedCards.includes(cell.value) ? 'yellow' : highlightedPositions.includes(parseInt(cell.staticData[2])) ? '#f2f2f2' // Changed from 'lightblue' to '#f2f2f2' (light gray)\n              : clickedCards.includes(cell.value) ? 'yellow' : 'white',\n              position: 'relative'\n            },\n            children: cell.value !== 'x' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [cell.value, !isPlanetSymbol(cell.value) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"static-data\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: getCardColor(cell.staticData[0])\n                  },\n                  children: cell.staticData[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: getCardColor(cell.staticData[1])\n                  },\n                  children: cell.staticData[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : cell.value\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: ['♆', '♅', '♄', '♃', '♂', '♀', '☿', ''].map((planet, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid black',\n              textAlign: 'center',\n              color: 'red',\n              // All planets are in red\n              position: 'relative'\n            },\n            children: planet\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), weeklyPlanetCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weekly-planet-cards\",\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weekly Planet Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          gap: '5px'\n        },\n        children: weeklyPlanetCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            width: '60px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: '1px solid black',\n              padding: '5px',\n              marginBottom: '2px',\n              backgroundColor: highlightedCards.includes(card) ? 'yellow' : 'white',\n              color: getCardColor(card)\n            },\n            children: card\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '0.8em'\n            },\n            children: ['Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'][index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '0.8em'\n            },\n            children: weeklyPlanetDates[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: {\n        content: {\n          maxWidth: '600px',\n          height: '600px',\n          margin: '0 auto'\n        }\n      },\n      children: modalCardData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: modalCardData.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Keywords:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 16\n          }, this), \" \", modalCardData.keywords]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Dates:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 16\n          }, this), \" \", modalCardData.dates]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this), modalCardData.staticData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Displacing: \", modalCardData.displacingCard.staticData[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 17\n          }, this), modalCardData.displacingCard && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Displacing Card Position:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 24\n              }, this), \" \", modalCardData.displacingCard.position]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Displacing Keywords:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 24\n              }, this), \" \", modalCardData.displacingCard.keywords]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Displacing Dates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 24\n              }, this), \" \", modalCardData.displacingCard.dates]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Next Displacement Card: \", modalCardData.displacingCard.staticData[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 17\n          }, this), modalCardData.staticCard1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Static Keywords:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 24\n              }, this), \" \", modalCardData.staticCard1.keywords]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Static Dates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 24\n              }, this), \" \", modalCardData.staticCard1.dates]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 410,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"U9TETbkS25m2Zep/aYBk7BQWxa8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","birthdayCardMapping","cardData","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","staticDataMapping","value1","value2","initialSpread","value","staticData","lineOfSuccession","fixedCards","semiFixedPairs","getNextCardInSuccession","card","index","indexOf","length","generateNextSpread","currentSpread","nextSpread","JSON","parse","stringify","forEach","pair","row","includes","some","generateAllSpreads","spreads","i","push","getCardForBirthday","birthday","year","month","day","split","birthDateString","parseInt","Date","toLocaleString","console","log","entry","find","calculateAge","birthdate","today","birthDate","age","getFullYear","monthDifference","getMonth","getDate","findCardPositionInSpread","spread","rowIndex","colIndex","isPlanetSymbol","symbol","test","getCardColor","getNext12Positions","startPosition","positions","findCardPosition","cell","getDayOfWeek","dateString","date","getDay","calculatePlanetDates","now","birth","birthDayOfWeek","currentDayOfWeek","currentWeekStart","setDate","planetDates","toLocaleDateString","timeZone","calculatePlanetaryDays","planets","startDayOfWeek","mercuryDay","planetaryDays","planet","planetDay","toDateString","App","_s","selectedPlate","setSelectedPlate","setBirthdate","highlightedCards","setHighlightedCards","highlightedPositions","setHighlightedPositions","clickedCards","setClickedCards","modalIsOpen","setModalIsOpen","modalCardData","setModalCardData","weeklyPlanetCards","setWeeklyPlanetCards","weeklyPlanetDates","setWeeklyPlanetDates","setPlanetaryDays","handlePlateChange","e","newPlate","Number","target","position","handleBirthdateChange","preventDefault","inputBirthdate","plate","handleCardClick","prevClickedCards","staticDataPosition","displacingCard","staticCard1","filter","clickedCard","closeModal","handleWeeklyPlateClick","weeklyPlateNumber","calculateWeeklyNumber","next12Positions","planetCards","slice","map","pos","foundCard","flat","birthDateObj","calculatedPlanetaryDays","diff","days","weeks","A","B","Math","floor","currentWeeklyNumber","handleSevenWeeklyPlateClick","weeklySevenPlateNumber","calculateSevenWeeklyNumber","cycle","currentSevenWeeklyNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_","type","onClick","border","cellIndex","style","textAlign","color","backgroundColor","marginTop","display","justifyContent","flexWrap","gap","width","padding","marginBottom","fontSize","isOpen","onRequestClose","content","maxWidth","height","margin","keywords","dates","_c","$RefreshReg$"],"sources":["/workspaces/cardology/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport birthdayCardMapping from './birthdayCardMapping.json'; // Ensure this path is correct\nimport cardData from './cardData.json'; // Ensure this path is correct\nimport Modal from 'react-modal';\n\n// Static Data Mapping\nconst staticDataMapping = {\n  1: { value1: 'J♠', value2: '10♣' },\n  2: { value1: 'Q♠', value2: '8♦' },\n  3: { value1: 'K♠', value2: 'K♠' },\n  4: { value1: 'A♥', value2: '3♥' },\n  5: { value1: '2♥', value2: 'A♣' },\n  6: { value1: '3♥', value2: 'Q♣' },\n  7: { value1: '4♥', value2: '10♠' },\n  8: { value1: '5♥', value2: '4♣' },\n  9: { value1: '6♥', value2: '3♦' },\n  10: { value1: '7♥', value2: 'A♠' },\n  11: { value1: '8♥', value2: '7♥' },\n  12: { value1: '9♥', value2: '7♦' },\n  13: { value1: '10♥', value2: '5♠' },\n  14: { value1: 'J♥', value2: 'J♥' },\n  15: { value1: 'Q♥', value2: '9♣' },\n  16: { value1: 'K♥', value2: '9♠' },\n  17: { value1: 'A♣', value2: '2♥' },\n  18: { value1: '2♣', value2: 'K♥' },\n  19: { value1: '3♣', value2: 'K♦' },\n  20: { value1: '4♣', value2: '6♥' },\n  21: { value1: '5♣', value2: '4♣' },\n  22: { value1: '6♣', value2: '2♦' },\n  23: { value1: '7♣', value2: 'J♠' },\n  24: { value1: '8♣', value2: '8♣' },\n  25: { value1: '9♣', value2: '6♦' },\n  26: { value1: '10♣', value2: '4♠' },\n  27: { value1: 'J♣', value2: '10♥' },\n  28: { value1: 'Q♣', value2: '10♦' },\n  29: { value1: 'K♣', value2: '8♠' },\n  30: { value1: 'A♦', value2: 'A♥' },\n  31: { value1: '2♦', value2: 'A♦' },\n  32: { value1: '3♦', value2: 'Q♦' },\n  33: { value1: '4♦', value2: '5♥' },\n  34: { value1: '5♦', value2: '3♣' },\n  35: { value1: '6♦', value2: '3♠' },\n  36: { value1: '7♦', value2: '9♥' },\n  37: { value1: '8♦', value2: '7♣' },\n  38: { value1: '9♦', value2: '5♦' },\n  39: { value1: '10♦', value2: 'Q♠' },\n  40: { value1: 'J♦', value2: 'J♣' },\n  41: { value1: 'Q♦', value2: '9♦' },\n  42: { value1: 'K♦', value2: '7♠' },\n  43: { value1: 'A♠', value2: '2♣' },\n  44: { value1: '2♠', value2: 'K♣' },\n  45: { value1: '3♠', value2: 'J♦' },\n  46: { value1: '4♠', value2: '4♥' },\n  47: { value1: '5♠', value2: '4♦' },\n  48: { value1: '6♠', value2: '2♠' },\n  49: { value1: '7♠', value2: '8♥' },\n  50: { value1: '8♠', value2: '6♣' },\n  51: { value1: '9♠', value2: '6♠' },\n  52: { value1: '10♠', value2: 'Q♥' },\n};\n\n\n// Initial setup for Age 0 spread\nconst initialSpread = [\n  [{ value: '', staticData: ['', '', ''] }, { value: '', staticData: ['', '', ''] }, { value: 'K♠', staticData: ['K♠', 'K♠', 3] }, { value: '8♦', staticData: ['Q♠', '8♦', 2] }, { value: '10♣', staticData: ['J♠', '10♣', 1] }, { value: '', staticData: ['', '', ''] }, { value: '', staticData: ['', '', ''] }, { value: '☉', staticData: ['', '', ''] }],\n  [{ value: 'A♠', staticData: ['7♥', 'A♠', 10] }, { value: '3♦', staticData: ['6♥', '3♦', 9] }, { value: '5♣', staticData: ['5♥', '5♣', 8] }, { value: '10♠', staticData: ['4♥', '10♠', 7] }, { value: 'Q♣', staticData: ['3♥', 'Q♣', 6] }, { value: 'A♣', staticData: ['2♥', 'A♣', 5] }, { value: '3♥', staticData: ['A♥', '3♥', 4] }, { value: '☿', staticData: ['', '', ''] }],\n  [{ value: '2♥', staticData: ['A♣', '2♥', 17] }, { value: '9♠', staticData: ['K♥', '9♠', 16] }, { value: '9♣', staticData: ['Q♥', '9♣', 15] }, { value: 'J♥', staticData: ['J♥', 'J♥', 14] }, { value: '5♠', staticData: ['10♥', '5♠', 13] }, { value: '7♦', staticData: ['9♥', '7♦', 12] }, { value: '7♥', staticData: ['8♥', '7♥', 11] }, { value: '♀', staticData: ['', '', ''] }],\n  [{ value: '8♣', staticData: ['8♣', '8♣', 24] }, { value: 'J♠', staticData: ['7♣', 'J♠', 23] }, { value: '2♦', staticData: ['6♣', '2♦', 22] }, { value: '4♣', staticData: ['5♣', '4♣', 21] }, { value: '6♥', staticData: ['4♣', '6♥', 20] }, { value: 'K♦', staticData: ['3♣', 'K♦', 19] }, { value: 'K♥', staticData: ['2♣', 'K♥', 18] }, { value: '♂', staticData: ['', '', ''] }],\n  [{ value: 'A♦', staticData: ['2♦', 'A♦', 31] }, { value: 'A♥', staticData: ['A♦', 'A♥', 30] }, { value: '8♠', staticData: ['K♣', '8♠', 29] }, { value: '10♦', staticData: ['Q♣', '10♦', 28] }, { value: '10♥', staticData: ['J♣', '10♥', 27] }, { value: '4♠', staticData: ['10♣', '4♠', 26] }, { value: '6♦', staticData: ['9♣', '6♦', 25] }, { value: '♃', staticData: ['', '', ''] }],\n  [{ value: '5♦', staticData: ['9♦', '5♦', 38] }, { value: '7♣', staticData: ['8♦', '7♣', 37] }, { value: '9♥', staticData: ['7♦', '9♥', 36] }, { value: '3♠', staticData: ['6♦', '3♠', 35] }, { value: '3♣', staticData: ['5♦', '3♣', 34] }, { value: '5♥', staticData: ['4♦', '5♥', 33] }, { value: 'Q♦', staticData: ['3♦', 'Q♦', 32] }, { value: '♄', staticData: ['', '', ''] }],\n  [{ value: 'J♦', staticData: ['3♠', 'J♦', 45] }, { value: 'K♣', staticData: ['2♠', 'K♣', 44] }, { value: '2♣', staticData: ['A♠', '2♣', 43] }, { value: '7♠', staticData: ['K♦', '7♠', 42] }, { value: '9♦', staticData: ['Q♦', '9♦', 41] }, { value: 'J♣', staticData: ['J♦', 'J♣', 40] }, { value: 'Q♠', staticData: ['10♦', 'Q♠', 39] }, { value: '♅', staticData: ['', '', ''] }],\n  [{ value: 'Q♥', staticData: ['10♠', 'Q♥', 52] }, { value: '6♠', staticData: ['9♠', '6♠', 51] }, { value: '6♣', staticData: ['8♠', '6♣', 50] }, { value: '8♥', staticData: ['7♠', '8♥', 49] }, { value: '2♠', staticData: ['6♠', '2♠', 48] }, { value: '4♦', staticData: ['5♠', '4♦', 47] }, { value: '4♥', staticData: ['4♠', '4♥', 46] }, { value: '♆', staticData: ['', '', ''] }]\n];\n\nconst lineOfSuccession = [\n  'Q♠', '8♦', '7♣', 'J♠', '10♣', '4♠', '4♥', '10♠', 'Q♥', '9♣', '6♦', '3♠',\n  'J♦', 'J♣', '10♥', '5♠', '4♦', '5♥', '5♣', '4♣', '6♥', '3♦', 'Q♦', '9♦',\n  '5♦', '3♣', 'K♦', '7♠', '8♥', '7♥', 'A♠', '2♣', 'K♥', '9♠', '6♠', '2♠',\n  'K♣', '8♠', '6♣', '2♦', 'A♦', 'A♥', '3♥', 'Q♣', '10♦'\n];\n\nconst fixedCards = ['K♠', '8♣', 'J♥'];\nconst semiFixedPairs = [\n  { value1: 'A♣', value2: '2♥' },\n  { value1: '7♦', value2: '9♥' }\n];\n\n// Function to get the next card in the line of succession\nconst getNextCardInSuccession = (card) => {\n  const index = lineOfSuccession.indexOf(card);\n  if (index !== -1 && index < lineOfSuccession.length - 1) {\n    return lineOfSuccession[index + 1];\n  } else if (index === lineOfSuccession.length - 1) {\n    return lineOfSuccession[0];\n  }\n  return card;\n};\n\n// Function to generate the next spread based on the current spread\nconst generateNextSpread = (currentSpread) => {\n  const nextSpread = JSON.parse(JSON.stringify(currentSpread));\n\n  // Handle semi-fixed cards\n  semiFixedPairs.forEach(pair => {\n    nextSpread.forEach(row => {\n      row.forEach(card => {\n        if (card.value === pair.value1) {\n          card.value = pair.value2;\n        } else if (card.value === pair.value2) {\n          card.value = pair.value1;\n        }\n      });\n    });\n  });\n\n  // Handle regular cards\n  nextSpread.forEach(row => {\n    row.forEach(card => {\n      if (!fixedCards.includes(card.value) && !semiFixedPairs.some(pair => pair.value1 === card.value || pair.value2 === card.value)) {\n        card.value = getNextCardInSuccession(card.value);\n      }\n    });\n  });\n\n  return nextSpread;\n};\n\n// Function to generate all spreads\nconst generateAllSpreads = () => {\n  const spreads = [initialSpread];\n  for (let i = 1; i < 90; i++) {\n    spreads.push(generateNextSpread(spreads[i - 1]));\n  }\n  return spreads;\n};\n\n// Function to get the card for a given birthday\nconst getCardForBirthday = (birthday) => {\n  const [year, month, day] = birthday.split('-');\n  const birthDateString = `${parseInt(day)}-${new Date(year, month - 1).toLocaleString('default', { month: 'short' })}`;\n  console.log('Formatted Birthday:', birthDateString); // Debugging log\n  const entry = birthdayCardMapping.find(entry => entry.birthday === birthDateString);\n  return entry ? entry.card : null;\n};\n\nconst calculateAge = (birthdate) => {\n  const today = new Date();\n  const birthDate = new Date(birthdate);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDifference = today.getMonth() - birthDate.getMonth();\n  if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n};\n\nconst findCardPositionInSpread = (card, spread) => {\n  for (let rowIndex = 0; rowIndex < spread.length; rowIndex++) {\n    for (let colIndex = 0; colIndex < spread[rowIndex].length; colIndex++) {\n      if (spread[rowIndex][colIndex].value === card) {\n        return { rowIndex, colIndex };\n      }\n    }\n  }\n  return null;\n};\n\n\nconst isPlanetSymbol = (symbol) => {\n  return /[☉☿♀♂♃♄♅♆]/.test(symbol);\n};\n\nconst getCardColor = (card) => {\n  if (card.includes('♥') || card.includes('♦')) {\n    return 'red';\n  } else if (card.includes('♠') || card.includes('♣')) {\n    return 'black';\n  }\n  return 'black';\n};\n\n// New function to get the next 12 static data positions\nconst getNext12Positions = (startPosition) => {\n  const positions = [];\n  for (let i = 0; i < 12; i++) {\n    positions.push(((startPosition + i) % 52) + 1);\n  }\n  return positions;\n};\n\n// New function to find the position of a card in the spread\nconst findCardPosition = (card, spread) => {\n  for (let row of spread) {\n    for (let cell of row) {\n      if (cell.value === card) {\n        return parseInt(cell.staticData[2]);\n      }\n    }\n  }\n  return null;\n};\n\n// New function to get the day of the week (0-6) for a given date\nconst getDayOfWeek = (dateString) => {\n  const date = new Date(dateString);\n  return date.getDay();\n};\n\n// New function to calculate planet dates based on birth day of week\nconst calculatePlanetDates = (birthdate) => {\n  const now = new Date();\n  const birth = new Date(birthdate);\n  const birthDayOfWeek = birth.getDay();\n  const currentDayOfWeek = now.getDay();\n  \n  // Calculate the start of the current week based on the birth day of week\n  const currentWeekStart = new Date(now);\n  currentWeekStart.setDate(now.getDate() - ((currentDayOfWeek - birthDayOfWeek + 7) % 7));\n  \n  // Ensure we're getting the most recent week\n  if (currentWeekStart > now) {\n    currentWeekStart.setDate(currentWeekStart.getDate() - 7);\n  }\n\n  const planetDates = [];\n  for (let i = 0; i < 7; i++) {\n    const date = new Date(currentWeekStart);\n    date.setDate(currentWeekStart.getDate() + i);\n    planetDates.push(date.toLocaleDateString('en-US', { month: 'numeric', day: 'numeric', timeZone: 'America/New_York' }));\n  }\n  return planetDates;\n};\n\nfunction calculatePlanetaryDays(birthDate) {\n  const planets = ['Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'];\n  const today = new Date();\n  const birthDayOfWeek = birthDate.getDay();\n  const startDayOfWeek = today.getDay();\n  let mercuryDay = new Date(today);\n  mercuryDay.setDate(today.getDate() - ((startDayOfWeek - birthDayOfWeek + 7) % 7));\n\n  const planetaryDays = [];\n\n  planets.forEach((planet, index) => {\n      let planetDay = new Date(mercuryDay);\n      planetDay.setDate(mercuryDay.getDate() + index);\n      planetaryDays.push({ planet: planet, date: planetDay.toDateString() });\n  });\n\n  return planetaryDays;\n}\n\nconst App = () => {\n  const [selectedPlate, setSelectedPlate] = useState(0);\n  const [birthdate, setBirthdate] = useState('');\n  const [highlightedCards, setHighlightedCards] = useState([]);\n  const [highlightedPositions, setHighlightedPositions] = useState([]);\n  const [clickedCards, setClickedCards] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalCardData, setModalCardData] = useState(null);\n  const [weeklyPlanetCards, setWeeklyPlanetCards] = useState([]);\n  const [weeklyPlanetDates, setWeeklyPlanetDates] = useState([]);\n  const spreads = generateAllSpreads();\n  const [planetaryDays, setPlanetaryDays] = useState([]);\n\n\n  const handlePlateChange = (e) => {\n    const newPlate = Number(e.target.value);\n    setSelectedPlate(newPlate);\n    if (highlightedCards.length > 0) {\n      const position = findCardPosition(highlightedCards[0], spreads[newPlate]);\n      if (position) {\n        setHighlightedPositions([position, ...getNext12Positions(position)]);\n      }\n    }\n  };\n\n  const handleBirthdateChange = (e) => {\n    e.preventDefault(); // Prevent the default form submission\n    const inputBirthdate = e.target.value;\n    setBirthdate(inputBirthdate);\n    const card = getCardForBirthday(inputBirthdate);\n    if (card) {\n      setHighlightedCards([card]);\n      const age = calculateAge(inputBirthdate);\n      const plate = age % 90;\n      setSelectedPlate(plate);\n      const position = findCardPosition(card, spreads[plate]);\n      if (position) {\n        setHighlightedPositions([position, ...getNext12Positions(position)]);\n      }\n    } else {\n      setHighlightedCards([]);\n      setHighlightedPositions([]);\n    }\n  };\n\n  const handleCardClick = (card) => {\n    setClickedCards((prevClickedCards) => {\n      if (prevClickedCards.includes(card)) {\n        const { rowIndex, colIndex } = findCardPositionInSpread(card, spreads[selectedPlate]);\n        const staticDataPosition = spreads[selectedPlate][rowIndex][colIndex].staticData[2];\n        const staticData = staticDataMapping[staticDataPosition];\n\n        setModalCardData({\n          value: card,\n          staticData: staticData || { value1: '', value2: '' },\n          ...cardData[card],\n          displacingCard: cardData[staticData.value2],\n          staticCard1: cardData[staticData.value1],\n        });\n        setModalIsOpen(true);\n        return prevClickedCards.filter((clickedCard) => clickedCard !== card);\n      } else {\n        return [...prevClickedCards, card];\n      }\n    });\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setModalCardData(null);\n  };\n  \n  const handleWeeklyPlateClick = () => {\n    if (birthdate) {\n      const weeklyPlateNumber = calculateWeeklyNumber(birthdate);\n      setSelectedPlate(weeklyPlateNumber);\n      setClickedCards([]);\n\n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const position = findCardPosition(card, spreads[weeklyPlateNumber]);\n        if (position) {\n          const next12Positions = getNext12Positions(position);\n          setHighlightedPositions([position, ...next12Positions]);\n          \n          // Get the cards for the 1st through 7th positions\n          const planetCards = next12Positions.slice(0, 7).map(pos => {\n            const foundCard = spreads[weeklyPlateNumber].flat().find(cell => parseInt(cell.staticData[2]) === pos);\n            return foundCard ? foundCard.value : '';\n          });\n          setWeeklyPlanetCards(planetCards);\n\n          // Calculate planetary days\nconst birthDateObj = new Date(birthdate);\nconst calculatedPlanetaryDays = calculatePlanetaryDays(birthDateObj);\nsetPlanetaryDays(calculatedPlanetaryDays);\n\n          // Calculate dates for each planet using the new function\n          const planetDates = calculatePlanetDates(birthdate);\n          setWeeklyPlanetDates(planetDates);\n        }\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n        setWeeklyPlanetCards([]);\n        setWeeklyPlanetDates([]);\n      }\n    }\n  };\n\n  const calculateWeeklyNumber = (birthdate) => {\n    const birth = new Date(birthdate);\n    const now = new Date();\n    const diff = now - birth;\n    const days = diff / 1000 / 60 / 60 / 24;\n    const weeks = days / 7;\n    const A = weeks / 90;\n    const B = A - Math.floor(A);\n    const currentWeeklyNumber = parseInt(B * 90);\n    return currentWeeklyNumber;\n  };\n  \n  const handleSevenWeeklyPlateClick = () => {\n    if (birthdate) {\n      const weeklySevenPlateNumber = calculateSevenWeeklyNumber(birthdate);\n      setSelectedPlate(weeklySevenPlateNumber);\n      setClickedCards([]);\n\n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const position = findCardPosition(card, spreads[weeklySevenPlateNumber]);\n        if (position) {\n          setHighlightedPositions([position, ...getNext12Positions(position)]);\n        }\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n      }\n    }\n  };\n\n  const calculateSevenWeeklyNumber = (birthdate) => {\n    const birth = new Date(birthdate);\n    const now = new Date();\n    const diff = now - birth;\n    const days = diff / 1000 / 60 / 60 / 24;\n    const cycle = days / 49;\n    const A = cycle / 90;\n    const B = A - Math.floor(A);\n    const currentSevenWeeklyNumber = parseInt(B * 90);\n    return currentSevenWeeklyNumber;\n  };\n  \n  return (\n    <div className=\"App\">\n      <h1>Planetary Table</h1>\n      <label>\n        Select Plate:\n        <select onChange={handlePlateChange} value={selectedPlate}>\n          {spreads.map((_, index) => (\n            <option value={index} key={index}>\n              Plate {index}\n            </option>\n          ))}\n        </select>\n      </label>\n      <label>\n        Enter Birthdate:\n        <input type=\"date\" value={birthdate} onChange={handleBirthdateChange} />\n      </label>      \n      <button onClick={handleWeeklyPlateClick}>Show Weekly Plate</button> \n      <button onClick={handleSevenWeeklyPlateClick}>Show 7 Weekly Plate</button>\n\n      <table border=\"1\">\n        <tbody>\n          {spreads[selectedPlate].map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {row.map((cell, cellIndex) => (\n                <td\n                  key={cellIndex}\n                  onClick={() => handleCardClick(cell.value)}\n                  style={{\n                    border: highlightedCards.includes(cell.value) || highlightedPositions.includes(parseInt(cell.staticData[2]))\n                      ? '3px solid black'\n                      : '1px solid black',\n                    textAlign: 'center',\n                    color: isPlanetSymbol(cell.value) ? 'red' : getCardColor(cell.value),\n                    backgroundColor: highlightedCards.includes(cell.value)\n                      ? 'yellow'\n                      : highlightedPositions.includes(parseInt(cell.staticData[2]))\n                      ? '#f2f2f2'  // Changed from 'lightblue' to '#f2f2f2' (light gray)\n                      : clickedCards.includes(cell.value)\n                      ? 'yellow'\n                      : 'white',\n                    position: 'relative',\n                  }}\n                >\n                  {cell.value !== 'x' ? (\n                    <>\n                      {cell.value}\n                      {!isPlanetSymbol(cell.value) && (\n                        <div className=\"static-data\">\n                          <div style={{ color: getCardColor(cell.staticData[0]) }}>{cell.staticData[0]}</div>\n                          <div style={{ color: getCardColor(cell.staticData[1]) }}>{cell.staticData[1]}</div>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    cell.value\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n          <tr>\n            {['♆', '♅', '♄', '♃', '♂', '♀', '☿', ''].map((planet, index) => (\n              <td\n                key={index}\n                style={{\n                  border: '1px solid black',\n                  textAlign: 'center',\n                  color: 'red', // All planets are in red\n                  position: 'relative'\n                }}\n              >\n                {planet}\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n\n      {/* New section for displaying weekly planet cards with dates */}\n      {weeklyPlanetCards.length > 0 && (\n        <div className=\"weekly-planet-cards\" style={{ marginTop: '20px', textAlign: 'center' }}>\n          <h2>Weekly Planet Cards</h2>\n          <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', gap: '5px' }}>\n            {weeklyPlanetCards.map((card, index) => (\n              <div key={index} style={{ textAlign: 'center', width: '60px' }}>\n                <div style={{\n                  border: '1px solid black',\n                  padding: '5px',\n                  marginBottom: '2px',\n                  backgroundColor: highlightedCards.includes(card) ? 'yellow' : 'white',\n                  color: getCardColor(card)\n                }}>\n                  {card}\n                </div>\n                <div style={{ fontSize: '0.8em' }}>{['Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'][index]}</div>\n                <div style={{ fontSize: '0.8em' }}>{weeklyPlanetDates[index]}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={{\n          content: {\n            maxWidth: '600px',\n            height:'600px',\n            margin: '0 auto',\n          },\n        }}\n      >\n        {modalCardData && (\n          <div>\n            <h2>{modalCardData.value}</h2>\n            <p><strong>Keywords:</strong> {modalCardData.keywords}</p>\n            <p><strong>Dates:</strong> {modalCardData.dates}</p>\n            {modalCardData.staticData && (\n              <>\n                <hr/>\n                <h3>Displacing: {modalCardData.displacingCard.staticData[1]}</h3>\n                {modalCardData.displacingCard && (\n                  <>\n                    <p><strong>Displacing Card Position:</strong> {modalCardData.displacingCard.position}</p>\n                    <p><strong>Displacing Keywords:</strong> {modalCardData.displacingCard.keywords}</p>\n                    <p><strong>Displacing Dates:</strong> {modalCardData.displacingCard.dates}</p>\n                  </>\n                )}\n                <hr/>\n                <h3>Next Displacement Card: {modalCardData.displacingCard.staticData[0]}</h3>\n                {modalCardData.staticCard1 && (\n                  <>\n                    <p><strong>Static Keywords:</strong> {modalCardData.staticCard1.keywords}</p>\n                    <p><strong>Static Dates:</strong> {modalCardData.staticCard1.dates}</p>\n                  </>\n                )}\n              </>\n            )}\n            <button onClick={closeModal}>Close</button>\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}