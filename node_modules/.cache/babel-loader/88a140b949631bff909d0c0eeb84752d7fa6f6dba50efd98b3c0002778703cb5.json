{"ast":null,"code":"var _jsxFileName = \"/workspaces/cardology/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport birthdayCardMapping from './birthdayCardMapping.json'; // Ensure this path is correct\nimport cardData from './cardData.json'; // Ensure this path is correct\nimport Modal from 'react-modal';\n\n// ... (keep all the existing code unchanged)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedPlate, setSelectedPlate] = useState(0);\n  const [birthdate, setBirthdate] = useState('');\n  const [highlightedCards, setHighlightedCards] = useState([]);\n  const [highlightedPositions, setHighlightedPositions] = useState([]);\n  const [clickedCards, setClickedCards] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalCardData, setModalCardData] = useState(null);\n  const [weeklyPlanetCards, setWeeklyPlanetCards] = useState([]);\n  const [weeklyPlanetDates, setWeeklyPlanetDates] = useState([]);\n  const spreads = generateAllSpreads();\n\n  // ... (keep all existing functions unchanged)\n\n  const handleWeeklyPlateClick = () => {\n    if (birthdate) {\n      const weeklyPlateNumber = calculateWeeklyNumber(birthdate);\n      setSelectedPlate(weeklyPlateNumber);\n      setClickedCards([]);\n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const position = findCardPosition(card, spreads[weeklyPlateNumber]);\n        if (position) {\n          const next12Positions = getNext12Positions(position);\n          setHighlightedPositions([position, ...next12Positions]);\n\n          // Get the cards for the 1st through 7th positions\n          const planetCards = next12Positions.slice(0, 7).map(pos => {\n            const foundCard = spreads[weeklyPlateNumber].flat().find(cell => parseInt(cell.staticData[2]) === pos);\n            return foundCard ? foundCard.value : '';\n          });\n          setWeeklyPlanetCards(planetCards);\n\n          // Calculate dates for each planet\n          const birthDate = new Date(birthdate);\n          const planetDates = [];\n          for (let i = 0; i < 7; i++) {\n            const date = new Date(birthDate);\n            date.setDate(date.getDate() + i);\n            planetDates.push(date.toLocaleDateString('en-US', {\n              month: 'numeric',\n              day: 'numeric'\n            }));\n          }\n          setWeeklyPlanetDates(planetDates);\n        }\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n        setWeeklyPlanetCards([]);\n        setWeeklyPlanetDates([]);\n      }\n    }\n  };\n  const calculateWeeklyNumber = birthdate => {\n    const birth = new Date(birthdate);\n    const now = new Date();\n    const diff = now - birth;\n    const days = diff / 1000 / 60 / 60 / 24;\n    const weeks = days / 7;\n    return weeks;\n  };\n\n  // ... (keep all other existing code unchanged)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: weeklyPlanetCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weekly-planet-cards\",\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weekly Planet Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          gap: '5px'\n        },\n        children: weeklyPlanetCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            width: '60px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: '1px solid black',\n              padding: '5px',\n              marginBottom: '2px',\n              backgroundColor: highlightedCards.includes(card) ? 'yellow' : 'white',\n              color: getCardColor(card)\n            },\n            children: card\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '0.8em'\n            },\n            children: ['Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'][index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '0.8em'\n            },\n            children: weeklyPlanetDates[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dgMB+z4LH/deDUdFHe5vIbpX+yM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","birthdayCardMapping","cardData","Modal","jsxDEV","_jsxDEV","App","_s","selectedPlate","setSelectedPlate","birthdate","setBirthdate","highlightedCards","setHighlightedCards","highlightedPositions","setHighlightedPositions","clickedCards","setClickedCards","modalIsOpen","setModalIsOpen","modalCardData","setModalCardData","weeklyPlanetCards","setWeeklyPlanetCards","weeklyPlanetDates","setWeeklyPlanetDates","spreads","generateAllSpreads","handleWeeklyPlateClick","weeklyPlateNumber","calculateWeeklyNumber","card","getCardForBirthday","position","findCardPosition","next12Positions","getNext12Positions","planetCards","slice","map","pos","foundCard","flat","find","cell","parseInt","staticData","value","birthDate","Date","planetDates","i","date","setDate","getDate","push","toLocaleDateString","month","day","birth","now","diff","days","weeks","className","children","length","style","marginTop","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","flexWrap","gap","index","width","border","padding","marginBottom","backgroundColor","includes","color","getCardColor","fontSize","_c","$RefreshReg$"],"sources":["/workspaces/cardology/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport birthdayCardMapping from './birthdayCardMapping.json'; // Ensure this path is correct\nimport cardData from './cardData.json'; // Ensure this path is correct\nimport Modal from 'react-modal';\n\n// ... (keep all the existing code unchanged)\n\nconst App = () => {\n  const [selectedPlate, setSelectedPlate] = useState(0);\n  const [birthdate, setBirthdate] = useState('');\n  const [highlightedCards, setHighlightedCards] = useState([]);\n  const [highlightedPositions, setHighlightedPositions] = useState([]);\n  const [clickedCards, setClickedCards] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalCardData, setModalCardData] = useState(null);\n  const [weeklyPlanetCards, setWeeklyPlanetCards] = useState([]);\n  const [weeklyPlanetDates, setWeeklyPlanetDates] = useState([]);\n  const spreads = generateAllSpreads();\n\n  // ... (keep all existing functions unchanged)\n\n  const handleWeeklyPlateClick = () => {\n    if (birthdate) {\n      const weeklyPlateNumber = calculateWeeklyNumber(birthdate);\n      setSelectedPlate(weeklyPlateNumber);\n      setClickedCards([]);\n\n      const card = getCardForBirthday(birthdate);\n      if (card) {\n        setHighlightedCards([card]);\n        const position = findCardPosition(card, spreads[weeklyPlateNumber]);\n        if (position) {\n          const next12Positions = getNext12Positions(position);\n          setHighlightedPositions([position, ...next12Positions]);\n          \n          // Get the cards for the 1st through 7th positions\n          const planetCards = next12Positions.slice(0, 7).map(pos => {\n            const foundCard = spreads[weeklyPlateNumber].flat().find(cell => parseInt(cell.staticData[2]) === pos);\n            return foundCard ? foundCard.value : '';\n          });\n          setWeeklyPlanetCards(planetCards);\n\n          // Calculate dates for each planet\n          const birthDate = new Date(birthdate);\n          const planetDates = [];\n          for (let i = 0; i < 7; i++) {\n            const date = new Date(birthDate);\n            date.setDate(date.getDate() + i);\n            planetDates.push(date.toLocaleDateString('en-US', { month: 'numeric', day: 'numeric' }));\n          }\n          setWeeklyPlanetDates(planetDates);\n        }\n      } else {\n        setHighlightedCards([]);\n        setHighlightedPositions([]);\n        setWeeklyPlanetCards([]);\n        setWeeklyPlanetDates([]);\n      }\n    }\n  };\n\n  const calculateWeeklyNumber = (birthdate) => {\n    const birth = new Date(birthdate);\n    const now = new Date();\n    const diff = now - birth;\n    const days = diff / 1000 / 60 / 60 / 24;\n    const weeks = days / 7;\n    return weeks;\n  };\n\n  // ... (keep all other existing code unchanged)\n\n  return (\n    <div className=\"App\">\n      {/* ... (keep all existing JSX unchanged) */}\n\n      {/* Modified div for displaying weekly planet cards */}\n      {weeklyPlanetCards.length > 0 && (\n        <div className=\"weekly-planet-cards\" style={{ marginTop: '20px', textAlign: 'center' }}>\n          <h2>Weekly Planet Cards</h2>\n          <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', gap: '5px' }}>\n            {weeklyPlanetCards.map((card, index) => (\n              <div key={index} style={{ textAlign: 'center', width: '60px' }}>\n                <div style={{\n                  border: '1px solid black',\n                  padding: '5px',\n                  marginBottom: '2px',\n                  backgroundColor: highlightedCards.includes(card) ? 'yellow' : 'white',\n                  color: getCardColor(card)\n                }}>\n                  {card}\n                </div>\n                <div style={{ fontSize: '0.8em' }}>{['Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'][index]}</div>\n                <div style={{ fontSize: '0.8em' }}>{weeklyPlanetDates[index]}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* ... (keep all other existing JSX unchanged) */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}