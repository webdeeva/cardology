{"ast":null,"code":"var _jsxFileName = \"/workspaces/cardology/src/components/WeeklyReadingPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Text, VStack, CloseButton, Spinner } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklyReadingPanel = ({\n  isOpen,\n  onClose,\n  weeklyCards,\n  cardData\n}) => {\n  _s();\n  const [reading, setReading] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    console.log('weeklyCards:', weeklyCards);\n    console.log('cardData:', cardData);\n  }, [weeklyCards, cardData]);\n  const mapCardToFullName = card => {\n    const ranks = {\n      'A': 'Ace',\n      'K': 'King',\n      'Q': 'Queen',\n      'J': 'Jack',\n      '10': 'Ten',\n      '9': 'Nine',\n      '8': 'Eight',\n      '7': 'Seven',\n      '6': 'Six',\n      '5': 'Five',\n      '4': 'Four',\n      '3': 'Three',\n      '2': 'Two'\n    };\n    const suits = {\n      '♠': 'Spades',\n      '♥': 'Hearts',\n      '♦': 'Diamonds',\n      '♣': 'Clubs'\n    };\n    const rank = card.slice(0, -1);\n    const suit = card.slice(-1);\n    return `${ranks[rank]} of ${suits[suit]}`;\n  };\n  const generateReading = async () => {\n    if (!weeklyCards || !cardData) {\n      console.error('weeklyCards or cardData is undefined');\n      setReading('Error: Unable to generate reading due to missing data.');\n      return;\n    }\n    setIsLoading(true);\n    setReading('');\n    const cardInfo = weeklyCards.map(card => {\n      const fullCardName = mapCardToFullName(card);\n      const cardDetails = cardData.find(c => c.Card === fullCardName);\n      if (!cardDetails) {\n        console.warn(`No details found for card: ${fullCardName}`);\n        return fullCardName;\n      }\n      return `${fullCardName}: ${cardDetails.Description}`;\n    }).join('\\n\\n');\n    const prompt = `Based on the following cards for a weekly reading, provide an insightful and detailed interpretation for the week ahead:\\n\\n${cardInfo}`;\n    try {\n      console.log('Sending prompt:', prompt);\n      const response = await fetch('/api/generate-reading', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API response not OK:', response.status, errorText);\n        throw new Error(`API request failed: ${response.status} ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('API response:', data);\n      setReading(data.reading);\n    } catch (error) {\n      console.error('Error generating reading:', error);\n      setReading(`Failed to generate reading. Error: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"fixed\",\n    right: 0,\n    top: 0,\n    width: \"400px\",\n    height: \"100%\",\n    bg: \"white\",\n    boxShadow: \"-2px 0 10px rgba(0, 0, 0, 0.1)\",\n    p: 4,\n    overflowY: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n      position: \"absolute\",\n      right: 2,\n      top: 2,\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        fontWeight: \"bold\",\n        children: \"Weekly Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: generateReading,\n        isLoading: isLoading,\n        loadingText: \"Generating...\",\n        children: \"Generate Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }, this), reading && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          whiteSpace: \"pre-wrap\",\n          children: reading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyReadingPanel, \"Q/gDzHkTDehvU933mdfgzcjzscU=\");\n_c = WeeklyReadingPanel;\nexport default WeeklyReadingPanel;\nvar _c;\n$RefreshReg$(_c, \"WeeklyReadingPanel\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Text","VStack","CloseButton","Spinner","jsxDEV","_jsxDEV","WeeklyReadingPanel","isOpen","onClose","weeklyCards","cardData","_s","reading","setReading","isLoading","setIsLoading","console","log","mapCardToFullName","card","ranks","suits","rank","slice","suit","generateReading","error","cardInfo","map","fullCardName","cardDetails","find","c","Card","warn","Description","join","prompt","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","status","Error","data","json","message","position","right","top","width","height","bg","boxShadow","p","overflowY","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","spacing","align","fontSize","fontWeight","colorScheme","loadingText","mt","whiteSpace","_c","$RefreshReg$"],"sources":["/workspaces/cardology/src/components/WeeklyReadingPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Button, Text, VStack, CloseButton, Spinner } from '@chakra-ui/react';\n\nconst WeeklyReadingPanel = ({ isOpen, onClose, weeklyCards, cardData }) => {\n  const [reading, setReading] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    console.log('weeklyCards:', weeklyCards);\n    console.log('cardData:', cardData);\n  }, [weeklyCards, cardData]);\n\n  const mapCardToFullName = (card) => {\n    const ranks = {\n      'A': 'Ace', 'K': 'King', 'Q': 'Queen', 'J': 'Jack',\n      '10': 'Ten', '9': 'Nine', '8': 'Eight', '7': 'Seven',\n      '6': 'Six', '5': 'Five', '4': 'Four', '3': 'Three', '2': 'Two'\n    };\n    const suits = {\n      '♠': 'Spades', '♥': 'Hearts', '♦': 'Diamonds', '♣': 'Clubs'\n    };\n    \n    const rank = card.slice(0, -1);\n    const suit = card.slice(-1);\n    \n    return `${ranks[rank]} of ${suits[suit]}`;\n  };\n\n  const generateReading = async () => {\n    if (!weeklyCards || !cardData) {\n      console.error('weeklyCards or cardData is undefined');\n      setReading('Error: Unable to generate reading due to missing data.');\n      return;\n    }\n\n    setIsLoading(true);\n    setReading('');\n\n    const cardInfo = weeklyCards.map(card => {\n      const fullCardName = mapCardToFullName(card);\n      const cardDetails = cardData.find(c => c.Card === fullCardName);\n      if (!cardDetails) {\n        console.warn(`No details found for card: ${fullCardName}`);\n        return fullCardName;\n      }\n      return `${fullCardName}: ${cardDetails.Description}`;\n    }).join('\\n\\n');\n\n    const prompt = `Based on the following cards for a weekly reading, provide an insightful and detailed interpretation for the week ahead:\\n\\n${cardInfo}`;\n\n    try {\n      console.log('Sending prompt:', prompt);\n      const response = await fetch('/api/generate-reading', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ prompt }),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API response not OK:', response.status, errorText);\n        throw new Error(`API request failed: ${response.status} ${errorText}`);\n      }\n\n      const data = await response.json();\n      console.log('API response:', data);\n      setReading(data.reading);\n    } catch (error) {\n      console.error('Error generating reading:', error);\n      setReading(`Failed to generate reading. Error: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <Box\n      position=\"fixed\"\n      right={0}\n      top={0}\n      width=\"400px\"\n      height=\"100%\"\n      bg=\"white\"\n      boxShadow=\"-2px 0 10px rgba(0, 0, 0, 0.1)\"\n      p={4}\n      overflowY=\"auto\"\n    >\n      <CloseButton position=\"absolute\" right={2} top={2} onClick={onClose} />\n      <VStack spacing={4} align=\"stretch\">\n        <Text fontSize=\"xl\" fontWeight=\"bold\">Weekly Reading</Text>\n        <Button \n          colorScheme=\"blue\" \n          onClick={generateReading} \n          isLoading={isLoading}\n          loadingText=\"Generating...\"\n        >\n          Generate Reading\n        </Button>\n        {isLoading && <Spinner />}\n        {reading && (\n          <Box mt={4}>\n            <Text whiteSpace=\"pre-wrap\">{reading}</Text>\n          </Box>\n        )}\n      </VStack>\n    </Box>\n  );\n};\n\nexport default WeeklyReadingPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}